<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lynn&#39;s Blog</title>
  
  
  <link href="http://lzreload.com/en/atom.xml" rel="self"/>
  
  <link href="http://lzreload.com/en/"/>
  <updated>2022-09-22T11:54:05.257Z</updated>
  <id>http://lzreload.com/en/</id>
  
  <author>
    <name>Lynn Zhou</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[Cluster API] Deploy cluster on Vsphere</title>
    <link href="http://lzreload.com/en/2022/09/22/Deploy-cluster-on-Vsphere-using-cluster-api/"/>
    <id>http://lzreload.com/en/2022/09/22/Deploy-cluster-on-Vsphere-using-cluster-api/</id>
    <published>2022-09-22T11:48:59.000Z</published>
    <updated>2022-09-22T11:54:05.257Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Environment-requirements"><a href="#Environment-requirements" class="headerlink" title="Environment requirements"></a>Environment requirements</h1><p>Make sure these tools are all installed:</p><ul><li>kubectl</li><li>go</li><li>docker</li><li>clusterctl</li><li>kind</li></ul><h1 id="Deployment-Steps"><a href="#Deployment-Steps" class="headerlink" title="Deployment Steps"></a>Deployment Steps</h1><h2 id="1-Configure-clusterctl"><a href="#1-Configure-clusterctl" class="headerlink" title="1. Configure clusterctl"></a>1. Configure clusterctl</h2><p>Create a file named <code>clusterctl.yaml</code> in folder <code>.cluster-api</code>, which is normally located at <code>$Home</code>.</p><p>For example:</p><pre class="line-numbers language-none"><code class="language-none">## -- Controller settings -- ##VSPHERE_USERNAME: &quot;...&quot; # The username used to access the remote vSphere endpointVSPHERE_PASSWORD: &quot;...&quot; # The password used to access the remote vSphere endpoint## -- Required workload cluster default settings -- ##VSPHERE_SERVER: &lt;vcenter_server_ip&gt; # The vCenter server IP or FQDNVSPHERE_DATACENTER: &lt;vcenter_data_center&gt; # The vSphere datacenter to deploy the management cluster onVSPHERE_DATASTORE: &lt;datastore_name&gt; # The vSphere datastore to deploy the management cluster onVSPHERE_NETWORK: &lt;network_name&gt; # The VM network to deploy the management cluster onVSPHERE_RESOURCE_POOL: &lt;Path_to_resource_pool&gt; # The vSphere resource pool for your VMs( About how to get correct path of VSPHERE_RESOURCE_POOL, Please check the Troubleshooting #1 section.)VSPHERE_FOLDER: &quot;&quot; # The VM folder for your VMs. Set to &quot;&quot; to use the root vSphere folderVSPHERE_TEMPLATE: &lt;template_name&gt; # The VM template to use for your management cluster.CONTROL_PLANE_ENDPOINT_IP: &lt;control_plane_ip&gt;&quot; # the IP that kube-vip is going to use as a control plane endpointVSPHERE_TLS_THUMBPRINT: &quot;...&quot;  # sha1 thumbprint of the vcenter certificate, can be gotten with this command: openssl x509 -sha1 -fingerprint -in ca.crt -nooutEXP_CLUSTER_RESOURCE_SET: &quot;true&quot; # This enables the ClusterResourceSet feature that we are using for deploying CSIVSPHERE_SSH_AUTHORIZED_KEY: &quot;ssh-rsa ...&quot; # The public ssh authorized key on all machines, Set it to &quot;&quot; if you don&#39;t want to use ssh to access to nodesVSPHERE_STORAGE_POLICY: &quot;&quot; # This is the vSphere storage policy. Set it to &quot;&quot; if you don&#39;t want to use a storage policy.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Remember to set these before we init the management cluster, otherwise, we might get <code>an error about the cluster resource set</code>( If this error occurs, we need to edit the deployment of capi-controller-manager as shown below with <code>kubectl</code>)</p><pre class="line-numbers language-none"><code class="language-none">#deploy&#x2F;capi-controller-managerspec:      containers:      - args:        - --leader-elect        - --metrics-bind-addr&#x3D;localhost:8080        - --feature-gates&#x3D;MachinePool&#x3D;false,ClusterResourceSet&#x3D;true,ClusterTopology&#x3D;false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Set <code>ClusterResourceSet</code> to <code>true</code> like what is shown in the code above.</p><h2 id="2-Use-Kind-and-Cluserctl-to-create-a-management-cluster"><a href="#2-Use-Kind-and-Cluserctl-to-create-a-management-cluster" class="headerlink" title="2. Use Kind and Cluserctl to create a management cluster"></a>2. Use Kind and Cluserctl to create a management cluster</h2><p>(1) Use <code>Kind</code> to create a new Kubernetes cluster (A docker container actually).</p><p>(2) Configure <code>kubeconfig</code>, make sure the current context of <code>kubectl</code> is pointing to the <code>Kind</code> cluster.</p><p>(3) Use <code>clusterctl</code> to transform the current cluster to a management cluster (remember to specify using <code>vsphere</code> as infrastructure provider).</p><pre class="line-numbers language-none"><code class="language-none"># Create kind cluster$ kind create cluster# Set current context, the default name of this kind cluster will be kind-kind$ kubectl cluster-info --context kind-kind# Transform current cluster to management cluster$ clusterctl init --infrastructure vsphere<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>In this step, <code>clusterctl</code> will install 4 components into the cluster: <code>cluster-api</code>, <code>bootstrap-kubeadm</code>, <code>control-plan-kubeadm</code> and <code>infrastructure-vsphere</code>. Then we can use <code>kubectl get pods --all-namespaces</code> command to check the status of the management cluster. If some pods are stuck at ImagePullBackOff status, please check Troubleshooting #3 section.</p><h3 id="3-Download-the-ova-file-and-deploy-a-template-on-Vsphere"><a href="#3-Download-the-ova-file-and-deploy-a-template-on-Vsphere" class="headerlink" title="3. Download the ova file and deploy a template on Vsphere"></a>3. Download the ova file and deploy a template on Vsphere</h3><p>It is required that machines provisioned by CAPV have <code>cloud-init</code>, <code>kubeadm</code>, and a <code>container runtime</code> pre-installed. We can use one of the CAPV machine images generated by SIG Cluster Lifecycle as a VM template. Images are available here: <a href="https://github.com/kubernetes-sigs/cluster-api-provider-vsphere/blob/master/README.md#kubernetes-versions-with-published-ovas">ova download</a>.</p><h2 id="4-Deploy-workload-cluster"><a href="#4-Deploy-workload-cluster" class="headerlink" title="4. Deploy workload cluster."></a>4. Deploy workload cluster.</h2><p>(1) Generate YAML file of the cluster:</p><p>Use the command shown below to generate a YAML file of the target cluster.</p><pre class="line-numbers language-none"><code class="language-none">clusterctl generate cluster &lt;cluster name&gt; --kubernetes-version &lt;kubernete version&gt; --control-plane-machine-count 1  --worker-machine-count 3 &gt; cluster.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2) Deploy target cluster</p><p>Deploy cluster with command <code>kubectl apply -f cluster.yaml</code>.</p><p>After these two steps, we can get info about the cluster with the command <code>kubectl get cluster</code> command:</p><pre class="line-numbers language-none"><code class="language-none">$ kubectl get clusterNAME     PHASE         AGE   VERSIONeighth   Provisioned   23h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>If nothing goes wrong (no situation like wrong Vsphere configuration[Troubleshooting #1] or missing kube-vip image[Troubleshooting #2]), then all VMs (master node and workers) will be created on Vsphere.</p><p>With <code>kubectl get machine</code> command, we can check the status of VMs that have been created for our cluster.</p><pre class="line-numbers language-none"><code class="language-none">$ kubectl get machineNAME                           CLUSTER   NODENAME                       PROVIDERID                                       PHASE     AGE   VERSIONeighth-md-0-7b848c46d8-69m2n   eighth    eighth-md-0-7b848c46d8-69m2n   vsphere:&#x2F;&#x2F;423aff2a-386c-f7e1-ca4a-3d1fcde217c6   Running   23h   v1.20.1eighth-md-0-7b848c46d8-7m6h5   eighth    eighth-md-0-7b848c46d8-7m6h5   vsphere:&#x2F;&#x2F;423a2464-d3ee-4c75-96ac-3202609cc2ee   Running   23h   v1.20.1eighth-md-0-7b848c46d8-cbnwf   eighth    eighth-md-0-7b848c46d8-cbnwf   vsphere:&#x2F;&#x2F;423a1791-3d80-1f8f-a071-b7b5900f69ea   Running   23h   v1.20.1eighth-tf4mg                   eighth    eighth-tf4mg                   vsphere:&#x2F;&#x2F;423af9cd-4b1e-617c-a778-b4e435c4efd0   Running   23h   v1.20.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>And now we can generate a <code>kubeconfig</code>(with <code>clusterctl get kubeconfig &lt;cluster_name&gt;</code> command) to access this new cluster:</p><pre class="line-numbers language-none"><code class="language-none">$ clusterctl get kubeconfig eighth &gt; cluster.kubeconfig$ KUBECONFIG&#x3D;cluster.kubeconfig kubectl get pods --all-namespaces -o wideNAMESPACE     NAME                                      READY   STATUS              RESTARTS   AGE     IP               NODE                           NOMINATED NODE   READINESS GATESkube-system   coredns-74ff55c5b-f9qp7                   0&#x2F;1     Pending             0          3m57s   &lt;none&gt;           &lt;none&gt;                         &lt;none&gt;           &lt;none&gt;kube-system   coredns-74ff55c5b-qdm4m                   0&#x2F;1     Pending             0          3m57s   &lt;none&gt;           &lt;none&gt;                         &lt;none&gt;           &lt;none&gt;kube-system   etcd-eighth-tf4mg                         1&#x2F;1     Running             0          3m50s   10.103.226.233   eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   kube-apiserver-eighth-tf4mg               1&#x2F;1     Running             0          3m50s   10.103.226.233   eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   kube-controller-manager-eighth-tf4mg      1&#x2F;1     Running             0          3m50s   10.103.226.233   eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   kube-proxy-2njsn                          1&#x2F;1     Running             0          3m57s   10.103.226.233   eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   kube-proxy-5cw4z                          1&#x2F;1     Running             0          22s     10.103.226.235   eighth-md-0-7b848c46d8-69m2n   &lt;none&gt;           &lt;none&gt;kube-system   kube-proxy-5kknb                          1&#x2F;1     Running             0          7s      10.103.226.236   eighth-md-0-7b848c46d8-7m6h5   &lt;none&gt;           &lt;none&gt;kube-system   kube-proxy-mmtzw                          1&#x2F;1     Running             0          78s     10.103.226.234   eighth-md-0-7b848c46d8-cbnwf   &lt;none&gt;           &lt;none&gt;kube-system   kube-scheduler-eighth-tf4mg               1&#x2F;1     Running             0          3m50s   10.103.226.233   eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   kube-vip-eighth-tf4mg                     1&#x2F;1     Running             0          3m49s   10.103.226.233   eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-cloud-controller-manager-2ldmr    0&#x2F;1     ImagePullBackOff    0          3m58s   10.103.226.233   eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-cloud-controller-manager-5fp4w    0&#x2F;1     ImagePullBackOff    0          23s     10.103.226.235   eighth-md-0-7b848c46d8-69m2n   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-cloud-controller-manager-6pxj7    0&#x2F;1     ContainerCreating   0          7s      10.103.226.236   eighth-md-0-7b848c46d8-7m6h5   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-cloud-controller-manager-nlg8r    0&#x2F;1     ImagePullBackOff    0          78s     10.103.226.234   eighth-md-0-7b848c46d8-cbnwf   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-csi-controller-5456544dd5-htkvn   0&#x2F;5     Pending             0          3m59s   &lt;none&gt;           &lt;none&gt;                         &lt;none&gt;           &lt;none&gt;kube-system   vsphere-csi-node-g4wgk                    0&#x2F;3     ContainerCreating   0          78s     &lt;none&gt;           eighth-md-0-7b848c46d8-cbnwf   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-csi-node-lnt7t                    0&#x2F;3     ContainerCreating   0          3m59s   &lt;none&gt;           eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-csi-node-sm2fg                    0&#x2F;3     ContainerCreating   0          23s     &lt;none&gt;           eighth-md-0-7b848c46d8-69m2n   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-csi-node-xcs5d                    0&#x2F;3     ContainerCreating   0          7s      &lt;none&gt;           eighth-md-0-7b848c46d8-7m6h5   &lt;none&gt;           &lt;none&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>According to the output, there are several problems that need to be solved.</p><p>If we get <code>ImagePullBackOff</code>, the Troubleshooting #3  section might be helpful.</p><p>Also,<code>coredns</code> pods will be stuck at <code>Pending</code> because CNI is missing in this cluster and we need to deploy it manually.</p><h2 id="5-Deploy-CNI"><a href="#5-Deploy-CNI" class="headerlink" title="5. Deploy CNI"></a>5. Deploy CNI</h2><p><code>Calico</code> is used in my cluster. We can use this command to deploy it to our cluster:</p><pre class="line-numbers language-none"><code class="language-none">#Deploy CNI$kubectl apply -f https:&#x2F;&#x2F;docs.projectcalico.org&#x2F;manifests&#x2F;calico.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>After CNI is successfully deployed, we can check the status of the cluster:</p><pre class="line-numbers language-none"><code class="language-none">$kubectl get pods --all-namespaces -o wideNAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE   IP                NODE                           NOMINATED NODE   READINESS GATESkube-system   calico-kube-controllers-558995777d-jkkk4   1&#x2F;1     Running   0          24h   192.168.139.67    eighth-md-0-7b848c46d8-cbnwf   &lt;none&gt;           &lt;none&gt;kube-system   calico-node-6gfdj                          1&#x2F;1     Running   0          24h   10.103.226.236    eighth-md-0-7b848c46d8-7m6h5   &lt;none&gt;           &lt;none&gt;kube-system   calico-node-92nn8                          1&#x2F;1     Running   0          24h   10.103.226.234    eighth-md-0-7b848c46d8-cbnwf   &lt;none&gt;           &lt;none&gt;kube-system   calico-node-jbjvx                          1&#x2F;1     Running   0          24h   10.103.226.233    eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   calico-node-k42dc                          1&#x2F;1     Running   0          24h   10.103.226.235    eighth-md-0-7b848c46d8-69m2n   &lt;none&gt;           &lt;none&gt;kube-system   coredns-74ff55c5b-f9qp7                    1&#x2F;1     Running   0          24h   192.168.139.68    eighth-md-0-7b848c46d8-cbnwf   &lt;none&gt;           &lt;none&gt;kube-system   coredns-74ff55c5b-qdm4m                    1&#x2F;1     Running   0          24h   192.168.139.66    eighth-md-0-7b848c46d8-cbnwf   &lt;none&gt;           &lt;none&gt;kube-system   etcd-eighth-tf4mg                          1&#x2F;1     Running   0          24h   10.103.226.233    eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   kube-apiserver-eighth-tf4mg                1&#x2F;1     Running   0          24h   10.103.226.233    eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   kube-controller-manager-eighth-tf4mg       1&#x2F;1     Running   0          24h   10.103.226.233    eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   kube-proxy-2njsn                           1&#x2F;1     Running   0          24h   10.103.226.233    eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   kube-proxy-5cw4z                           1&#x2F;1     Running   0          24h   10.103.226.235    eighth-md-0-7b848c46d8-69m2n   &lt;none&gt;           &lt;none&gt;kube-system   kube-proxy-5kknb                           1&#x2F;1     Running   0          24h   10.103.226.236    eighth-md-0-7b848c46d8-7m6h5   &lt;none&gt;           &lt;none&gt;kube-system   kube-proxy-mmtzw                           1&#x2F;1     Running   0          24h   10.103.226.234    eighth-md-0-7b848c46d8-cbnwf   &lt;none&gt;           &lt;none&gt;kube-system   kube-scheduler-eighth-tf4mg                1&#x2F;1     Running   0          24h   10.103.226.233    eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   kube-vip-eighth-tf4mg                      1&#x2F;1     Running   0          24h   10.103.226.233    eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-cloud-controller-manager-2ldmr     1&#x2F;1     Running   0          24h   10.103.226.233    eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-cloud-controller-manager-5fp4w     1&#x2F;1     Running   0          24h   10.103.226.235    eighth-md-0-7b848c46d8-69m2n   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-cloud-controller-manager-6pxj7     1&#x2F;1     Running   0          24h   10.103.226.236    eighth-md-0-7b848c46d8-7m6h5   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-cloud-controller-manager-nlg8r     1&#x2F;1     Running   0          24h   10.103.226.234    eighth-md-0-7b848c46d8-cbnwf   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-csi-controller-5456544dd5-9w49q    5&#x2F;5     Running   0          22h   192.168.215.194   eighth-md-0-7b848c46d8-69m2n   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-csi-node-g4wgk                     3&#x2F;3     Running   0          24h   192.168.139.65    eighth-md-0-7b848c46d8-cbnwf   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-csi-node-lnt7t                     3&#x2F;3     Running   6          24h   192.168.193.193   eighth-tf4mg                   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-csi-node-sm2fg                     3&#x2F;3     Running   1          24h   192.168.215.193   eighth-md-0-7b848c46d8-69m2n   &lt;none&gt;           &lt;none&gt;kube-system   vsphere-csi-node-xcs5d                     3&#x2F;3     Running   1          24h   192.168.250.1     eighth-md-0-7b848c46d8-7m6h5   &lt;none&gt;           &lt;none&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>All the pods of this cluster are running, which means a Kubernetes cluster is successfully deployed on Vsphere.</p><h1 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h1><h2 id="1-No-VM-is-created-on-Vsphere-after-kubectl-apply-f-lt-cluster-yaml-file-gt"><a href="#1-No-VM-is-created-on-Vsphere-after-kubectl-apply-f-lt-cluster-yaml-file-gt" class="headerlink" title="#1 No VM is created on Vsphere after kubectl apply -f &lt;cluster_yaml_file&gt;"></a>#1 No VM is created on Vsphere after <code>kubectl apply -f &lt;cluster_yaml_file&gt;</code></h2><p>NO new VM is created on Vsphere after <code>kubectl apply -f &lt;cluster_yaml_file&gt;</code> command and ControlPlane stuck at <code>WaitingForKubeadmInit:</code></p><pre class="line-numbers language-none"><code class="language-none"># Get cluster status$clusterctl describe cluster testNAME                                           READY  SEVERITY  REASON                           SINCE  MESSAGE&#x2F;test                                          False  Info      WaitingForKubeadmInit            109m├─ClusterInfrastructure - VSphereCluster&#x2F;test  True                                              109m├─ControlPlane - KubeadmControlPlane&#x2F;test      False  Info      WaitingForKubeadmInit            20h│ └─Machine&#x2F;test-m7n2j                         True                                              21h└─Workers  └─MachineDeployment&#x2F;test-md-0                False  Warning   WaitingForAvailableMachines      21h    Minimum availability requires 3 replicas, current 0 available    └─3 Machines...                            False  Info      WaitingForControlPlaneAvailable  21h    See test-md-0-f67dc55-dkpqx, test-md-0-f67dc55-g4brk, ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>We can check the logs of <code>capv-controller-manager</code> and <code>capi-controller-manager</code>:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#capv-controller-manager</span>$ kubectl logs deploy/capv-controller-manager -f<span class="token punctuation">..</span>.E1209 <span class="token number">10</span>:33:47.637562       <span class="token number">1</span> controller.go:317<span class="token punctuation">]</span> controller/vspherevm <span class="token string">"msg"</span><span class="token operator">=</span><span class="token string">"Reconciler error"</span> <span class="token string">"error"</span><span class="token operator">=</span><span class="token string">"failed to reconcile VM: cannot traverse type VirtualMachine"</span> <span class="token string">"name"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart-sp4j8"</span> <span class="token string">"namespace"</span><span class="token operator">=</span><span class="token string">"default"</span> <span class="token string">"reconciler group"</span><span class="token operator">=</span><span class="token string">"infrastructure.cluster.x-k8s.io"</span> <span class="token string">"reconciler kind"</span><span class="token operator">=</span><span class="token string">"VSphereVM"</span>I1209 <span class="token number">10</span>:33:59.999674       <span class="token number">1</span> reflector.go:535<span class="token punctuation">]</span> pkg/mod/k8s.io/client-go@v0.22.2/tools/cache/reflector.go:167: Watch close - *v1beta1.VSphereMachine total <span class="token number">2</span> items receivedI1209 <span class="token number">10</span>:34:12.990178       <span class="token number">1</span> reflector.go:535<span class="token punctuation">]</span> pkg/mod/k8s.io/client-go@v0.22.2/tools/cache/reflector.go:167: Watch close - *v1beta1.VSphereDeploymentZone total <span class="token number">0</span> items received<span class="token comment">#capi-controller-manager</span>$ kubectl logs deploy/capi-controller-manager -fI1209 <span class="token number">10</span>:35:44.955263       <span class="token number">1</span> machine_controller_phases.go:282<span class="token punctuation">]</span> controller/machine <span class="token string">"msg"</span><span class="token operator">=</span><span class="token string">"Infrastructure provider is not ready, requeuing"</span> <span class="token string">"cluster"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart"</span> <span class="token string">"name"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart-sp4j8"</span> <span class="token string">"namespace"</span><span class="token operator">=</span><span class="token string">"default"</span> <span class="token string">"reconciler group"</span><span class="token operator">=</span><span class="token string">"cluster.x-k8s.io"</span> <span class="token string">"reconciler kind"</span><span class="token operator">=</span><span class="token string">"Machine"</span>I1209 <span class="token number">10</span>:35:44.955316       <span class="token number">1</span> machine_controller_noderef.go:48<span class="token punctuation">]</span> controller/machine <span class="token string">"msg"</span><span class="token operator">=</span><span class="token string">"Cannot reconcile Machine's Node, no valid ProviderID yet"</span> <span class="token string">"cluster"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart"</span> <span class="token string">"machine"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart-sp4j8"</span> <span class="token string">"name"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart-sp4j8"</span> <span class="token string">"namespace"</span><span class="token operator">=</span><span class="token string">"default"</span> <span class="token string">"reconciler group"</span><span class="token operator">=</span><span class="token string">"cluster.x-k8s.io"</span> <span class="token string">"reconciler kind"</span><span class="token operator">=</span><span class="token string">"Machine"</span>I1209 <span class="token number">10</span>:36:03.491520       <span class="token number">1</span> machine_controller_phases.go:220<span class="token punctuation">]</span> controller/machine <span class="token string">"msg"</span><span class="token operator">=</span><span class="token string">"Bootstrap provider is not ready, requeuing"</span> <span class="token string">"cluster"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart"</span> <span class="token string">"name"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart-md-0-c8d556cb-hfc6g"</span> <span class="token string">"namespace"</span><span class="token operator">=</span><span class="token string">"default"</span> <span class="token string">"reconciler group"</span><span class="token operator">=</span><span class="token string">"cluster.x-k8s.io"</span> <span class="token string">"reconciler kind"</span><span class="token operator">=</span><span class="token string">"Machine"</span>I1209 <span class="token number">10</span>:36:03.498654       <span class="token number">1</span> machine_controller_phases.go:282<span class="token punctuation">]</span> controller/machine <span class="token string">"msg"</span><span class="token operator">=</span><span class="token string">"Infrastructure provider is not ready, requeuing"</span> <span class="token string">"cluster"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart"</span> <span class="token string">"name"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart-md-0-c8d556cb-hfc6g"</span> <span class="token string">"namespace"</span><span class="token operator">=</span><span class="token string">"default"</span> <span class="token string">"reconciler group"</span><span class="token operator">=</span><span class="token string">"cluster.x-k8s.io"</span> <span class="token string">"reconciler kind"</span><span class="token operator">=</span><span class="token string">"Machine"</span>I1209 <span class="token number">10</span>:36:03.498760       <span class="token number">1</span> machine_controller_noderef.go:48<span class="token punctuation">]</span> controller/machine <span class="token string">"msg"</span><span class="token operator">=</span><span class="token string">"Cannot reconcile Machine's Node, no valid ProviderID yet"</span> <span class="token string">"cluster"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart"</span> <span class="token string">"machine"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart-md-0-c8d556cb-hfc6g"</span> <span class="token string">"name"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart-md-0-c8d556cb-hfc6g"</span> <span class="token string">"namespace"</span><span class="token operator">=</span><span class="token string">"default"</span> <span class="token string">"reconciler group"</span><span class="token operator">=</span><span class="token string">"cluster.x-k8s.io"</span> <span class="token string">"reconciler kind"</span><span class="token operator">=</span><span class="token string">"Machine"</span>I1209 <span class="token number">10</span>:36:14.966929       <span class="token number">1</span> machine_controller_phases.go:282<span class="token punctuation">]</span> controller/machine <span class="token string">"msg"</span><span class="token operator">=</span><span class="token string">"Infrastructure provider is not ready, requeuing"</span> <span class="token string">"cluster"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart"</span> <span class="token string">"name"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart-sp4j8"</span> <span class="token string">"namespace"</span><span class="token operator">=</span><span class="token string">"default"</span> <span class="token string">"reconciler group"</span><span class="token operator">=</span><span class="token string">"cluster.x-k8s.io"</span> <span class="token string">"reconciler kind"</span><span class="token operator">=</span><span class="token string">"Machine"</span>I1209 <span class="token number">10</span>:36:14.967009       <span class="token number">1</span> machine_controller_noderef.go:48<span class="token punctuation">]</span> controller/machine <span class="token string">"msg"</span><span class="token operator">=</span><span class="token string">"Cannot reconcile Machine's Node, no valid ProviderID yet"</span> <span class="token string">"cluster"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart"</span> <span class="token string">"machine"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart-sp4j8"</span> <span class="token string">"name"</span><span class="token operator">=</span><span class="token string">"vsphere-quickstart-sp4j8"</span> <span class="token string">"namespace"</span><span class="token operator">=</span><span class="token string">"default"</span> <span class="token string">"reconciler group"</span><span class="token operator">=</span><span class="token string">"cluster.x-k8s.io"</span> <span class="token string">"reconciler kind"</span><span class="token operator">=</span><span class="token string">"Machine"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>capv-controller-manager</code> printed error message: <code>failed to reconcile VM: cannot traverse type VirtualMachine.</code> It might be because <code>VSPHERE_FOLDER</code> and <code>VSPHERE_RESOURCE_POOL</code> specified in <code>clusterctl.yaml</code> are incorrect.</p><p>To get the correct path of <code>VM folder</code> and <code>resource pool</code>, we can use <code>govc CLI</code>( a vSphere command line tool: <a href="https://github.com/vmware/govmomi/tree/master/govc">https://github.com/vmware/govmomi/tree/master/govc</a>).</p><p>(1)VSPHERE_RESOURCE_POOL</p><p>For example, if the resource pool’s name is “Test” and we want to get the full path of this resource pool:</p><pre class="line-numbers language-none"><code class="language-none">$govc pool.info -dc&#x3D;&lt;data_center_name&gt; TestName:               Test  Path:             &#x2F;&lt;Datacenter&gt;&#x2F;host&#x2F;&lt;host_name&gt;&#x2F;...&#x2F;Resources&#x2F;...&#x2F;Test  CPU Usage:        965MHz (2.5%)  CPU Shares:       normal  CPU Reservation:  0MHz (expandable&#x3D;true)  CPU Limit:        -1MHz  Mem Usage:        59816MB (11.7%)  Mem Shares:       normal  Mem Reservation:  0MB (expandable&#x3D;true)  Mem Limit:        -1MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Then the <code>Path</code> shown in the response is the correct path that we can fill in to <code>VSPHERE_RESOURCE_POOL</code> field in <code>clusterctl.yaml</code> file.</p><p>(2)VSPHERE_FOLDER</p><pre class="line-numbers language-none"><code class="language-none"># govc ls command will list all inventory items in target vsphere:$govc ls&#x2F;&lt;datacentor&gt;&#x2F;vm&#x2F;&lt;datacentor&gt;&#x2F;network&#x2F;&lt;datacentor&gt;&#x2F;host&#x2F;&lt;datacentor&gt;&#x2F;datastore# List items that are stored in &#x2F;&lt;datacentor&gt;&#x2F;vm inventory$govc ls &#x2F;&lt;datacentor&gt;&#x2F;vm&#x2F;&lt;datacentor&gt;&#x2F;vm&#x2F;Cluster_Conntroller_10.103.64.218&#x2F;&lt;datacentor&gt;&#x2F;vm&#x2F;test-win10-lan1...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>According to what we’ve got above, it can be told that basically, all the VMs are stored in <code>/&lt;datacenter&gt;/vm</code> inventory, so we can set <code>VSPHERE_FOLDER</code> to “” and vsphere will directly use /<datacenter>/vm as the folder to deploy VM.</p><h2 id="2-Stuck-at-WaitingForKubeadmInit-after-VM-is-successfully-provisioned"><a href="#2-Stuck-at-WaitingForKubeadmInit-after-VM-is-successfully-provisioned" class="headerlink" title="#2 Stuck at WaitingForKubeadmInit after VM is successfully provisioned"></a>#2 Stuck at WaitingForKubeadmInit after VM is successfully provisioned</h2><pre class="line-numbers language-none"><code class="language-none">$kubectl get machineNAME                      CLUSTER   NODENAME   PROVIDERID                                       PHASE         AGE   VERSIONtest-m7n2j                test                 vsphere:&#x2F;&#x2F;423aaa89-02b5-4796-7fdc-0b4619a0d4d6   Provisioned   21h   v1.20.1test-md-0-f67dc55-dkpqx   test                                                                  Pending       21h   v1.20.1test-md-0-f67dc55-g4brk   test                                                                  Pending       21h   v1.20.1test-md-0-f67dc55-x48xx   test                                                                  Pending       21h   v1.20.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>It can be told from the output we’ve got above that the master node is successfully provisioned (the VM is successfully created on Vsphere).</p><p>We can access to target VM using ssh with account <code>capv</code> and <code>ssh key</code> we’ve specified in clusterctl.yaml file.</p><pre class="line-numbers language-none"><code class="language-none"># Access to target VM using ssh (Make sure you&#39;ve set VSPHERE_SSH_AUTHORIZED_KEY in cluterctl.yaml)$ ssh capv@&lt;vm_ip&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>We can check the output of <code>cloud-init</code> first:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># check output of cloud-init</span>$ <span class="token function">cat</span> /var/log/cloud-init-output.log<span class="token operator">|</span><span class="token function">less</span><span class="token punctuation">..</span>.<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:57<span class="token punctuation">]</span> <span class="token punctuation">[</span>kubeconfig<span class="token punctuation">]</span> Using kubeconfig folder <span class="token string">"/etc/kubernetes"</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>kubeconfig<span class="token punctuation">]</span> Writing <span class="token string">"admin.conf"</span> kubeconfig <span class="token function">file</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>kubeconfig<span class="token punctuation">]</span> Writing <span class="token string">"kubelet.conf"</span> kubeconfig <span class="token function">file</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>kubeconfig<span class="token punctuation">]</span> Writing <span class="token string">"controller-manager.conf"</span> kubeconfig <span class="token function">file</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>kubeconfig<span class="token punctuation">]</span> Writing <span class="token string">"scheduler.conf"</span> kubeconfig <span class="token function">file</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Writing kubelet environment <span class="token function">file</span> with flags to <span class="token function">file</span> <span class="token string">"/var/lib/kubelet/kubeadm-flags.env"</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Writing kubelet configuration to <span class="token function">file</span> <span class="token string">"/var/lib/kubelet/config.yaml"</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Starting the kubelet<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>control-plane<span class="token punctuation">]</span> Using manifest folder <span class="token string">"/etc/kubernetes/manifests"</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>control-plane<span class="token punctuation">]</span> Creating static Pod manifest <span class="token keyword">for</span> <span class="token string">"kube-apiserver"</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>control-plane<span class="token punctuation">]</span> Creating static Pod manifest <span class="token keyword">for</span> <span class="token string">"kube-controller-manager"</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>control-plane<span class="token punctuation">]</span> Creating static Pod manifest <span class="token keyword">for</span> <span class="token string">"kube-scheduler"</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>etcd<span class="token punctuation">]</span> Creating static Pod manifest <span class="token keyword">for</span> <span class="token builtin class-name">local</span> etcd <span class="token keyword">in</span> <span class="token string">"/etc/kubernetes/manifests"</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58<span class="token punctuation">]</span> <span class="token punctuation">[</span>wait-control-plane<span class="token punctuation">]</span> Waiting <span class="token keyword">for</span> the kubelet to boot up the control plane as static Pods from directory <span class="token string">"/etc/kubernetes/manifests"</span><span class="token builtin class-name">.</span> This can take up to 4m0s<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:09:10<span class="token punctuation">]</span> <span class="token punctuation">[</span>kubelet-check<span class="token punctuation">]</span> Initial <span class="token function">timeout</span> of 40s passed.<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>   Unfortunately, an error has occurred:<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>           timed out waiting <span class="token keyword">for</span> the condition<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>   This error is likely caused by:<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>           - The kubelet is not running<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>           - The kubelet is unhealthy due to a misconfiguration of the node <span class="token keyword">in</span> some way <span class="token punctuation">(</span>required cgroups disabled<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>   If you are on a systemd-powered system, you can try to troubleshoot the error with the following commands:<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>           - <span class="token string">'systemctl status kubelet'</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>           - <span class="token string">'journalctl -xeu kubelet'</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>   Additionally, a control plane component may have crashed or exited when started by the container runtime.<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>   To troubleshoot, list all containers using your preferred container runtimes CLI.<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>   Here is one example how you may list all Kubernetes containers running <span class="token keyword">in</span> cri-o/containerd using crictl:<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>           - <span class="token string">'crictl --runtime-endpoint /var/run/containerd/containerd.sock ps -a | grep kube | grep -v pause'</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>           Once you have found the failing container, you can inspect its logs with:<span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span>           - <span class="token string">'crictl --runtime-endpoint /var/run/containerd/containerd.sock logs CONTAINERID'</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2021</span>-12-16 <span class="token number">10</span>:12:39<span class="token punctuation">]</span> error execution phase wait-control-plane: couldn't initialize a Kubernetes cluster<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Seems like there was an error occurred while waiting for the kubelet to boot up the control plane. Then we can check the status and logs of <code>kubelet</code>:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Check status of kubelet</span>$ systemctl status kubelet● kubelet.service - kubelet: The Kubernetes Node Agent   Loaded: loaded <span class="token punctuation">(</span>/lib/systemd/system/kubelet.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: enabled<span class="token punctuation">)</span>  Drop-In: /etc/systemd/system/kubelet.service.d           └─10-kubeadm.conf   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Thu <span class="token number">2021</span>-12-16 <span class="token number">17</span>:42:58 UTC<span class="token punctuation">;</span> 10h ago     Docs: https://kubernetes.io/docs/home/ Main PID: <span class="token number">1127</span> <span class="token punctuation">(</span>kubelet<span class="token punctuation">)</span>    Tasks: <span class="token number">15</span> <span class="token punctuation">(</span>limit: <span class="token number">4915</span><span class="token punctuation">)</span>   CGroup: /system.slice/kubelet.service           └─1127 /usr/bin/kubelet --bootstrap-kubeconfig<span class="token operator">=</span>/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig<span class="token operator">=</span>/etc/kubernetes/kubelet.conf --config<span class="token operator">=</span>/var/lib/kubelet/config.yaml --cloud-provider<span class="token operator">=</span>external --container-runtime<span class="token operator">=</span>remote --container-ru<span class="token comment"># If kubelet is running without any error</span><span class="token comment"># use `sudo journalctl -u kubelet` or `sudo journalctl -u kubelet --since &lt;specific_time>`</span><span class="token variable">$sudo</span> journalctl -u kubelet --since <span class="token string">"1 day ago"</span><span class="token operator">|</span><span class="token function">less</span><span class="token punctuation">..</span>.Dec <span class="token number">16</span> <span class="token number">10</span>:08:38 fifth-tgq4j kubelet<span class="token punctuation">[</span><span class="token number">1127</span><span class="token punctuation">]</span>: E1216 <span class="token number">10</span>:08:38.885118    <span class="token number">1127</span> remote_image.go:113<span class="token punctuation">]</span> PullImage <span class="token string">"ghcr.io/kube-vip/kube-vip:v0.3.5"</span> from image <span class="token function">service</span> failed: rpc error: code <span class="token operator">=</span> Unknown desc <span class="token operator">=</span> failed to pull and unpack image <span class="token string">"ghcr.io/kube-vip/kube-vip:v0.3.5"</span><span class="token builtin class-name">:</span> failed to resolve reference <span class="token string">"ghcr.io/kube-vip/kube-vip:v0.3.5"</span><span class="token builtin class-name">:</span> failed to <span class="token keyword">do</span> request: Head <span class="token string">"https://ghcr.io/v2/kube-vip/kube-vip/manifests/v0.3.5"</span><span class="token builtin class-name">:</span> dial tcp <span class="token number">20.205</span>.243.164:443: connect: connection refusedDec <span class="token number">16</span> <span class="token number">10</span>:08:38 fifth-tgq4j kubelet<span class="token punctuation">[</span><span class="token number">1127</span><span class="token punctuation">]</span>: E1216 <span class="token number">10</span>:08:38.885218    <span class="token number">1127</span> kuberuntime_image.go:51<span class="token punctuation">]</span> Pull image <span class="token string">"ghcr.io/kube-vip/kube-vip:v0.3.5"</span> failed: rpc error: code <span class="token operator">=</span> Unknown desc <span class="token operator">=</span> failed to pull and unpack image <span class="token string">"ghcr.io/kube-vip/kube-vip:v0.3.5"</span><span class="token builtin class-name">:</span> failed to resolve reference <span class="token string">"ghcr.io/kube-vip/kube-vip:v0.3.5"</span><span class="token builtin class-name">:</span> failed to <span class="token keyword">do</span> request: Head <span class="token string">"https://ghcr.io/v2/kube-vip/kube-vip/manifests/v0.3.5"</span><span class="token builtin class-name">:</span> dial tcp <span class="token number">20.205</span>.243.164:443: connect: connection refusedDec <span class="token number">16</span> <span class="token number">10</span>:08:38 fifth-tgq4j kubelet<span class="token punctuation">[</span><span class="token number">1127</span><span class="token punctuation">]</span>: E1216 <span class="token number">10</span>:08:38.885452    <span class="token number">1127</span> kuberuntime_manager.go:829<span class="token punctuation">]</span> container <span class="token operator">&amp;</span>Container<span class="token punctuation">&#123;</span>Name:kube-vip,Image:ghcr.io/kube-vip/kube-vip:v0.3.5,Command:<span class="token punctuation">[</span><span class="token punctuation">]</span>,Args:<span class="token punctuation">[</span>start<span class="token punctuation">]</span>,WorkingDir:,Ports:<span class="token punctuation">[</span><span class="token punctuation">]</span>ContainerPort<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>,Env:<span class="token punctuation">[</span><span class="token punctuation">]</span>EnvVar<span class="token punctuation">&#123;</span>EnvVar<span class="token punctuation">&#123;</span>Name:vip_arp,Value:true,ValueFrom:nil,<span class="token punctuation">&#125;</span>,EnvVar<span class="token punctuation">&#123;</span>Name:vip_leaderelection,Value:true,ValueFrom:nil,<span class="token punctuation">&#125;</span>,EnvVar<span class="token punctuation">&#123;</span>Name:vip_address,Value:10.103.226.219,ValueFrom:nil,<span class="token punctuation">&#125;</span>,EnvVar<span class="token punctuation">&#123;</span>Name:vip_interface,Value:eth0,ValueFrom:nil,<span class="token punctuation">&#125;</span>,EnvVar<span class="token punctuation">&#123;</span>Name:vip_leaseduration,Value:15,ValueFrom:nil,<span class="token punctuation">&#125;</span>,EnvVar<span class="token punctuation">&#123;</span>Name:vip_renewdeadline,Value:10,ValueFrom:nil,<span class="token punctuation">&#125;</span>,EnvVar<span class="token punctuation">&#123;</span>Name:vip_retryperiod,Value:2,ValueFrom:nil,<span class="token punctuation">&#125;</span>,<span class="token punctuation">&#125;</span>,Resources:ResourceRequirements<span class="token punctuation">&#123;</span>Limits:ResourceList<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>,Requests:ResourceList<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>,<span class="token punctuation">&#125;</span>,VolumeMounts:<span class="token punctuation">[</span><span class="token punctuation">]</span>VolumeMount<span class="token punctuation">&#123;</span>VolumeMount<span class="token punctuation">&#123;</span>Name:kubeconfig,ReadOnly:false,MountPath:/etc/kubernetes/admin.conf,SubPath:,MountPropagation:nil,SubPathExpr:,<span class="token punctuation">&#125;</span>,<span class="token punctuation">&#125;</span>,LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:<span class="token operator">&amp;</span>SecurityContext<span class="token punctuation">&#123;</span>Capabilities:<span class="token operator">&amp;</span>Capabilities<span class="token punctuation">&#123;</span>Add:<span class="token punctuation">[</span>NET_ADMIN SYS_TIME<span class="token punctuation">]</span>,Drop:<span class="token punctuation">[</span><span class="token punctuation">]</span>,<span class="token punctuation">&#125;</span>,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,<span class="token punctuation">&#125;</span>,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:<span class="token punctuation">[</span><span class="token punctuation">]</span>EnvFromSource<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>,TerminationMessagePolicy:File,VolumeDevices:<span class="token punctuation">[</span><span class="token punctuation">]</span>VolumeDevice<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>,StartupProbe:nil,<span class="token punctuation">&#125;</span> start failed <span class="token keyword">in</span> pod kube-vip-fifth-tgq4j_kube-system<span class="token punctuation">(</span>b31b938f7a5929f365eb5caefef24fa5<span class="token punctuation">)</span>: ErrImagePull: rpc error: code <span class="token operator">=</span> Unknown desc <span class="token operator">=</span> failed to pull and unpack image <span class="token string">"ghcr.io/kube-vip/kube-vip:v0.3.5"</span><span class="token builtin class-name">:</span> failed to resolve reference <span class="token string">"ghcr.io/kube-vip/kube-vip:v0.3.5"</span><span class="token builtin class-name">:</span> failed to <span class="token keyword">do</span> request: Head <span class="token string">"https://ghcr.io/v2/kube-vip/kube-vip/manifests/v0.3.5"</span><span class="token builtin class-name">:</span> dial tcp <span class="token number">20.205</span>.243.164:443: connect: connection refusedDec <span class="token number">16</span> <span class="token number">10</span>:08:38 fifth-tgq4j kubelet<span class="token punctuation">[</span><span class="token number">1127</span><span class="token punctuation">]</span>: E1216 <span class="token number">10</span>:08:38.885518    <span class="token number">1127</span> pod_workers.go:191<span class="token punctuation">]</span> Error syncing pod b31b938f7a5929f365eb5caefef24fa5 <span class="token punctuation">(</span><span class="token string">"kube-vip-fifth-tgq4j_kube-system(b31b938f7a5929f365eb5caefef24fa5)"</span><span class="token punctuation">)</span>, skipping: failed to <span class="token string">"StartContainer"</span> <span class="token keyword">for</span> <span class="token string">"kube-vip"</span> with ErrImagePull: <span class="token string">"rpc error: code = Unknown desc = failed to pull and unpack image <span class="token entity" title="\&quot;">\"</span>ghcr.io/kube-vip/kube-vip:v0.3.5<span class="token entity" title="\&quot;">\"</span>: failed to resolve reference <span class="token entity" title="\&quot;">\"</span>ghcr.io/kube-vip/kube-vip:v0.3.5<span class="token entity" title="\&quot;">\"</span>: failed to do request: Head <span class="token entity" title="\&quot;">\"</span>https://ghcr.io/v2/kube-vip/kube-vip/manifests/v0.3.5<span class="token entity" title="\&quot;">\"</span>: dial tcp 20.205.243.164:443: connect: connection refused"</span>Dec <span class="token number">16</span> <span class="token number">10</span>:08:39 fifth-tgq4j kubelet<span class="token punctuation">[</span><span class="token number">1127</span><span class="token punctuation">]</span>: E1216 <span class="token number">10</span>:08:39.268272    <span class="token number">1127</span> pod_workers.go:191<span class="token punctuation">]</span> Error syncing pod b31b938f7a5929f365eb5caefef24fa5 <span class="token punctuation">(</span><span class="token string">"kube-vip-fifth-tgq4j_kube-system(b31b938f7a5929f365eb5caefef24fa5)"</span><span class="token punctuation">)</span>, skipping: failed to <span class="token string">"StartContainer"</span> <span class="token keyword">for</span> <span class="token string">"kube-vip"</span> with ImagePullBackOff: <span class="token string">"Back-off pulling image <span class="token entity" title="\&quot;">\"</span>ghcr.io/kube-vip/kube-vip:v0.3.5<span class="token entity" title="\&quot;">\"</span>"</span><span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Seems like <code>kudeadm</code> fail to pull image of <code>kube-vip</code> during initialization.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Also we can check manifests folder of kubernetes, which contains all</span><span class="token comment"># the configurations of static pods that kubernete is going to create during</span><span class="token comment"># initailization</span>$ <span class="token function">ls</span> /etc/kubernetes/manifestsetcd.yaml  kube-apiserver.yaml  kube-controller-manager.yaml  kube-scheduler.yaml  kube-vip.yaml<span class="token comment"># List all Kubernetes containers running in cri-o/containerd</span>$ <span class="token function">sudo</span> crictl --runtime-endpoint /var/run/containerd/containerd.sock <span class="token function">ps</span> -a <span class="token operator">|</span> <span class="token function">grep</span> kube <span class="token operator">|</span> <span class="token function">grep</span> -v pause0154378d48ba2       4aa0b4397bbbc       <span class="token number">20</span> hours ago        Running             kube-scheduler            <span class="token number">0</span>                   ea07bd6eb04ff57bd6d75bad96       75c7f71120808       <span class="token number">20</span> hours ago        Running             kube-apiserver            <span class="token number">0</span>                   66da2fd70475a4008afcd0c408       2893d78e47dc3       <span class="token number">20</span> hours ago        Running             kube-controller-manager   <span class="token number">0</span>                   f3b477e5c7ae1<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>If it’s because <code>kudeadm</code> fail to pull the image of <code>kube-vip</code> during initialization, we might need to upload the image manually:</p><p>(Assume that the image is successfully downloaded to the local environment)</p><pre class="line-numbers language-none"><code class="language-none"># Save docker image to file kube-vip (local environment which might have proxy)$ docker save ghcr.io&#x2F;kube-vip&#x2F;kube-vip:v0.3.5 -o kube-vip# Transfer file to target VM$ scp kube-vip capv@&lt;ip&gt;:~# Access to target VM using ssh$ ssh capv@10.103.226.232# Ask containerd to load image$ sudo ctr -n k8s.io image import kube-vip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>After the image is successfully uploaded to the target VM, we need to reset and run <code>kubeadm init</code> again with the same config. Because kube-proxy and coredns are failed to be initialized since kubeadm init has been interrupted before.</p><hr><h2 id="3-Kubernetes-pods-stuck-at-ImagePullBackOff-status"><a href="#3-Kubernetes-pods-stuck-at-ImagePullBackOff-status" class="headerlink" title="#3 Kubernetes pods stuck at ImagePullBackOff status"></a>#3 Kubernetes pods stuck at ImagePullBackOff status</h2><p>If <code>ImagePullBackOff</code> error is found when we check the status of the cluster with <code>kubectl get pods --all-namespaces</code> command:</p><pre class="line-numbers language-none"><code class="language-none">$ kubectl get pods --all-namespacesNAMESPACE                           NAME                                                             READY   STATUS             RESTARTS   AGEcapi-kubeadm-bootstrap-system       capi-kubeadm-bootstrap-controller-manager-58945b95bf-nr8kv       0&#x2F;1     ImagePullBackOff   0          3h57mcapi-kubeadm-control-plane-system   capi-kubeadm-control-plane-controller-manager-58fc8f8c7c-jg9wn   0&#x2F;1     ImagePullBackOff   0          3h56mcapi-system                         capi-controller-manager-576744d8b7-vlvjt                         0&#x2F;1     ImagePullBackOff   0          8m7scapv-system                         capv-controller-manager-6fcb95cd6-pv7m5                          0&#x2F;1     ImagePullBackOff   0          3h28mcert-manager                        cert-manager-848f547974-gtvzs                                    1&#x2F;1     Running            2          3h57m...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>This is because the cluster failed to pull images of these components. We can try to set up a proxy to resolve it. </p><p>If the proxy doesn’t work, then we need to find another source for these images.</p><p>To solve the <code>ImagePullBackOff</code> problem:</p><p>(1) Check deployments of these pods and find out which images they need.</p><p>(2) Search the images on docker hub and download them.</p><p>(3) Use <code>docker tag &lt;origin&gt; &lt;target&gt;</code>  command to change tag of these images.</p><p>(4) Use <code>kind load &lt;image tag&gt;</code> command to load the image into the environment of the management cluster.</p><p>Then all the pods of the management cluster will run correctly.</p><h2 id="4-ControlPlane-stuck-at-PoweringOn-Machine"><a href="#4-ControlPlane-stuck-at-PoweringOn-Machine" class="headerlink" title="#4 ControlPlane stuck at PoweringOn @ Machine/-"></a>#4 ControlPlane stuck at PoweringOn @ Machine/<cluster_name>-<id></h2><pre class="line-numbers language-none"><code class="language-none">$ clusterctl describe cluster &lt;cluster_name&gt;NAME                                                READY  SEVERITY  REASON                                SINCE  MESSAGE&#x2F;localt&lt;cluster_name&gt;est                                          False  Info      PoweringOn @ Machine&#x2F;&lt;cluster_name&gt;-svpt4  17h    1 of 2 completed├─ClusterInfrastructure - VSphereCluster&#x2F;&lt;cluster_name&gt;  True                                                   17h├─ControlPlane - KubeadmControlPlane&#x2F;&lt;cluster_name&gt;      False  Info      PoweringOn @ Machine&#x2F;&lt;cluster_name&gt;-svpt4  17h    1 of 2 completed│ └─Machine&#x2F;&lt;cluster_name&gt;-svpt4                         False  Info      PoweringOn                            17h    1 of 2 completed└─Workers  └─MachineDeployment&#x2F;&lt;cluster_name&gt;-md-0                False  Warning   WaitingForAvailableMachines           17h    Minimum availability requires 3 replicas, current 0 available    └─3 Machines...                                 False  Info      WaitingForControlPlaneAvailable       17h    See localtest-md-0-7f754dc455-796h5, localtest-md-0-7f754dc455-7r5kd, ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>We can log in to Vsphere center and use the web console to access our new VM(Machine/<cluster_name>-svpt4)</p><p>(1) If the <code>VSPHERE_TEMPLATE</code> specified in <code>cluterctl.yaml</code> is centos-<version>, then these messages might be shown in the web console:</p><pre class="line-numbers language-none"><code class="language-none">capv.vm kernel: BAR 13 : failed to assign  [io size 0x1000]capv.vm kernel: BAR 13 : no space for [io size 0x1000]capv.vm dracut-initqueue[225]: Warning : dracut-initqueue timeout - starting timeout scriptscapv.vm dracut-initqueue[225]: Warning : Could not boot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Since <code>cloud-init</code> hasn’t finished initializing, I cannot log in to this VM, thus I haven’t figured out how to deal with this situation. So I used ubuntu instead.</p><p>(2) If the VSPHERE_TEMPLATE specified in <code>cluterctl.yaml</code> is ubuntu-<version> , then these messages might be shown in the web console:</p><pre class="line-numbers language-none"><code class="language-none">...failed to start wait for network to be configured...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><p>This might be because DHCP service is not set up in this vsphere center, the created VM should have its own IP address which is assigned by DHCP.</p><h2 id="5-Fingerprint-error-certificate-error"><a href="#5-Fingerprint-error-certificate-error" class="headerlink" title="#5 Fingerprint error / certificate error"></a>#5 Fingerprint error / certificate error</h2><p>If a pod of vsphere-cloud-controller-manager stuck at CrashLoopBackOff and its log shows:</p><pre class="line-numbers language-none"><code class="language-none">$kubectl logs -n kube-system pod&#x2F;vsphere-csi-controller-5456544dd5-44h77 vsphere-csi-controller...&#123;&quot;level&quot;:&quot;error&quot;,&quot;time&quot;:&quot;2021-12-20T11:33:00.238213779Z&quot;,&quot;caller&quot;:&quot;vanilla&#x2F;controller.go:121&quot;,&quot;msg&quot;:&quot;failed to get vcenter. err&#x3D;Post https:&#x2F;&#x2F;...:443&#x2F;sdk: x509: certificate is valid for ..., not ....&quot;,&quot;TraceId&quot;:&quot;d39d14cf-6386-4585-831c-9a5020ab14ab&quot;,...&#123;&quot;level&quot;:&quot;error&quot;,&quot;time&quot;:&quot;2021-12-20T11:33:00.238251257Z&quot;,&quot;caller&quot;:&quot;service&#x2F;service.go:135&quot;,&quot;msg&quot;:&quot;failed to init controller. Error: Post https:&#x2F;&#x2F;...m:443&#x2F;sdk: x509: certificate is valid for ..., not ...&quot;,&quot;TraceId&quot;:&quot;5e5b850d-4350-4115-8e86-6beb34f2ebad&quot;,...&#123;&quot;level&quot;:&quot;info&quot;,&quot;time&quot;:&quot;2021-12-20T11:33:00.238357103Z&quot;,&quot;caller&quot;:&quot;service&#x2F;service.go:110&quot;,&quot;msg&quot;:&quot;configured: \&quot;csi.vsphere.vmware.com\&quot; with clusterFlavor: \&quot;VANILLA\&quot; and mode: \&quot;controller\&quot;&quot;,&quot;TraceId&quot;:&quot;5e5b850d-4350-4115-8e86-6beb34f2ebad&quot;&#125;time&#x3D;&quot;2021-12-20T11:33:00Z&quot; level&#x3D;info msg&#x3D;&quot;removed sock file&quot; path&#x3D;&#x2F;var&#x2F;lib&#x2F;csi&#x2F;sockets&#x2F;pluginproxy&#x2F;csi.socktime&#x3D;&quot;2021-12-20T11:33:00Z&quot; level&#x3D;fatal msg&#x3D;&quot;grpc failed&quot; error&#x3D;&quot;Post https:&#x2F;&#x2F;&lt;vsphere_server_ip&gt;:443&#x2F;sdk: x509: certificate is valid for ..., not ...&quot;...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>or</p><pre class="line-numbers language-none"><code class="language-none">$kubectl logs -n kube-system pod&#x2F;vsphere-csi-controller-5456544dd5-44h77 vsphere-csi-controller...&#123;&quot;level&quot;:&quot;error&quot;,&quot;time&quot;:&quot;2021-12-21T07:03:22.107974392Z&quot;,&quot;caller&quot;:&quot;service&#x2F;service.go:135&quot;,&quot;msg&quot;:&quot;failed to init controller. Error: Post &lt;vsphere_server_ip&gt;:443&#x2F;sdk: x509: certificate signed by unknown authority&quot;......time&#x3D;&quot;2021-12-21T07:03:22Z&quot; level&#x3D;fatal msg&#x3D;&quot;grpc failed&quot; error&#x3D;&quot;Post https:&#x2F;&#x2F;&lt;vsphere_server_ip&gt;:443&#x2F;sdk: x509: certificate signed by unknown authority&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Please check whether <code>VSPHERE_SERVER</code> field and <code>VSPHERE_TLS_THUMBPRINT</code> in <code>clusterctl.yaml</code> are matched with each other.</p><p>If they are matched and you still get an unknown authority error like what is shown above, then you can add <code>insecure-flag = true</code> to <code>secret/csi-vsphere-config</code>:</p><pre class="line-numbers language-none"><code class="language-none"># Original secret&#x2F;csi-vsphere-configapiVersion: v1data:  csi-vsphere.conf: W0dsb2JhbF0KY2x1c3Rlci1pZCA9IZhdWx0L2VpZ2h0aCIKaW5z1cmUtZmxhZyA9IGZhbHNlCnRodW1icHJpbnQgPSAiODA6Mjk6N0I6NkU6OUY6MjU6Nzk6QzM6MM6NEY6NDg6Ng6Nzk6N0Q6NEY6NEE6RjI6REE6REQ6MzUiCgpbVmlydHVhbENlbnRlciAidmNlbnRlci...kind: Secretmetadata:...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>If you decode the data of csi-vsphere.conf , then you will get:</p><pre class="line-numbers language-none"><code class="language-none"># csi-vsphere.conf[Global]    cluster-id &#x3D; &quot;default&#x2F;eighth&quot;...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Add insecure-flag = true to Global section:</p><pre class="line-numbers language-none"><code class="language-none"># csi-vsphere.conf[Global]    cluster-id &#x3D; &quot;default&#x2F;eighth&quot;insecure-flag &#x3D; true...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Update secret/csi-vsphere-config and rerun pod of <code>vsphere-cloud-controller-manager</code>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Environment-requirements&quot;&gt;&lt;a href=&quot;#Environment-requirements&quot; class=&quot;headerlink&quot; title=&quot;Environment requirements&quot;&gt;&lt;/a&gt;Environment re</summary>
      
    
    
    
    
    <category term="Kubernetes" scheme="http://lzreload.com/en/tags/Kubernetes/"/>
    
    <category term="Cluster API" scheme="http://lzreload.com/en/tags/Cluster-API/"/>
    
  </entry>
  
  <entry>
    <title>About Docker network - Part 1</title>
    <link href="http://lzreload.com/en/2022/09/16/Docker-NetWork-1/"/>
    <id>http://lzreload.com/en/2022/09/16/Docker-NetWork-1/</id>
    <published>2022-09-16T10:40:25.000Z</published>
    <updated>2022-09-16T11:31:43.783Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><p>According to docker’s official document, docker’s networking subsystem(libnetwork) is portable, it’s using driver to provide networking functionality. Currently, these drivers exist by default:</p><ul><li>bridge</li><li>host</li><li>overlay</li><li>ipvlan</li><li>macvlan</li></ul><p>If we use <code>docker network ls</code> command to list networks offered by docker by default we can see:</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker">$ docker network lsNETWORK ID     NAME      DRIVER    SCOPE2fd34f93b369   bridge    bridge    local8e489d56f4d5   host      host      local2f7960394c0f   none      null      local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>None</code>, <code>host</code>, and <code>bridge</code> network are created by default once docker starts. <code>host</code> and <code>bridge</code> network is using <code>host</code> and <code>bridge</code> driver respectively mentioned above while <code>none</code> network is created without network driver. These three networks will be discussed in this article mainly about how containers will act when they are connected to different networks.</p><h1 id="None"><a href="#None" class="headerlink" title="None"></a>None</h1><p>Containers that are connected to <code>none</code> ****network will not have an external network interface:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Create a container with `none` network mode </span>$ docker run --rm -dit --network none --name no-net-alpine alpine:latest ash<span class="token comment"># Check container's network</span>$ docker <span class="token builtin class-name">exec</span> no-net-alpine <span class="token function">ip</span> <span class="token function">link</span> show<span class="token number">1</span>: lo: <span class="token operator">&lt;</span>LOOPBACK,UP,LOWER_UP<span class="token operator">></span> mtu <span class="token number">65536</span> qdisc noqueue state UNKNOWN qlen <span class="token number">1000</span>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Container with this mode of networking will only have a loopback interface, which means that it’s unable to send messages to other containers or external networks.</p><h1 id="Host"><a href="#Host" class="headerlink" title="Host"></a>Host</h1><p>Before we create a new container, we can inspect the network interface of the host first:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Local host</span>$ <span class="token function">ifconfig</span>docker0: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">409</span><span class="token operator"><span class="token file-descriptor important">9</span>&lt;</span>UP,BROADCAST,MULTICAST<span class="token operator">></span>  mtu <span class="token number">1500</span>        inet <span class="token number">172.17</span>.0.1  netmask <span class="token number">255.255</span>.0.0  broadcast <span class="token number">172.17</span>.255.255<span class="token punctuation">..</span>.ens192: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">416</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,BROADCAST,RUNNING,MULTICAST<span class="token operator">></span>  mtu <span class="token number">1500</span><span class="token punctuation">..</span>.lo: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">7</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,LOOPBACK,RUNNING<span class="token operator">></span>  mtu <span class="token number">65536</span>        inet <span class="token number">127.0</span>.0.1  netmask <span class="token number">255.0</span>.0.0<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Then, let’s create a new container and connect it to the <code>host</code> network:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Create a new container with host network mode</span>$ docker run --rm -dit --network <span class="token function">host</span> --name host-alpine alpine:latest ash<span class="token comment"># Access to new container</span>$ docker <span class="token builtin class-name">exec</span> -it host-alpine /bin/sh<span class="token comment"># Container host-alpine</span>$ <span class="token function">ifconfig</span>docker0   Link encap:Ethernet  HWaddr 02:42:D3:3C:90:82            inet addr:172.17.0.1  Bcast:172.17.255.255  Mask:255.255.0.0<span class="token punctuation">..</span>.ens192    Link encap:Ethernet  HWaddr 00:50:56:BA:06:B7  <span class="token punctuation">..</span>.lo        Link encap:Local Loopback            inet addr:127.0.0.1  Mask:255.0.0.0<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>According to the container shown above, we can observe that this new container has exact same network interfaces as the host which means that, it shares the host’s networking namespaces.</p><p>We can just consider it a normal app running on our computer. For example, we can also create an Nginx container with <code>host</code> network:</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># Host (No need to add --p to expose port 80 when using host network)</span>$ docker run --rm -d --network host --name my_nginx nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Then we can try to sent request to Nginx from Container host-alpine:</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># Access previous host container(host-alpine)</span>$ docker exec -it host-alpine /bin/sh<span class="token comment"># Container host-alpine</span>$ curl localhost:80&lt;!DOCTYPE html>...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Since container <code>my_nginx</code> and <code>host-alpine</code> are all connecting to <code>host</code> network, they all share the host’s network namespace, so that <code>host-alpine</code> can directly use <code>localhost:80</code> to send requests to <code>my_nginx</code>.</p><h1 id="Bridge"><a href="#Bridge" class="headerlink" title="Bridge"></a>Bridge</h1><h2 id="About-Bridge-mode"><a href="#About-Bridge-mode" class="headerlink" title="About Bridge mode"></a>About Bridge mode</h2><p><code>Bridge</code> is the default network driver of docker. </p><p>When we talk about <code>bridge network</code>, we are talking about a Link Layer device(a hardware device or a software device) that forwards traffic between network segments.</p><p>In <code>Docker</code>, a software bridge is used for containers to connect to the same bridge network in order to communicate with each other.</p><p>Before we start to create a container with <code>bridge</code> network type, we can check the initial state of our local environment first:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Inspect the ethernet bridge configuration</span>$ brctl showbridge name     bridge <span class="token function">id</span>               STP enabled     interfacesdocker0         <span class="token number">8000</span>.02428ab4554d       no$ <span class="token function">ip</span> <span class="token function">link</span> show<span class="token punctuation">..</span>.<span class="token number">3</span>: docker0: <span class="token operator">&lt;</span>NO-CARRIER,BROADCAST,MULTICAST,UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue state DOWN mode DEFAULT group default     link/ether 02:42:8a:b4:55:4d brd ff:ff:ff:ff:ff:ff<span class="token punctuation">..</span>.<span class="token comment"># Show IP routing table</span>$ route -nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface<span class="token number">0.0</span>.0.0         <span class="token number">10.103</span>.226.1    <span class="token number">0.0</span>.0.0         UG    <span class="token number">100</span>    <span class="token number">0</span>        <span class="token number">0</span> ens192<span class="token number">10.103</span>.226.0    <span class="token number">0.0</span>.0.0         <span class="token number">255.255</span>.255.0   U     <span class="token number">100</span>    <span class="token number">0</span>        <span class="token number">0</span> ens192<span class="token number">172.17</span>.0.0      <span class="token number">0.0</span>.0.0         <span class="token number">255.255</span>.0.0     U     <span class="token number">0</span>      <span class="token number">0</span>        <span class="token number">0</span> docker0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Create-container-with-bridge-mode-default"><a href="#Create-container-with-bridge-mode-default" class="headerlink" title="Create container with bridge mode(default):"></a>Create container with bridge mode(default):</h2><p>Then we can start to create a container:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Create a container with `bridge` network type</span>$ docker run --rm -dit --name bridge-alpine alpine ash<span class="token comment"># Check ips of container</span>$ docker <span class="token builtin class-name">exec</span> bridge-alpine <span class="token function">ip</span> addr<span class="token number">1</span>: lo: <span class="token operator">&lt;</span>LOOPBACK,UP,LOWER_UP<span class="token operator">></span> mtu <span class="token number">65536</span> qdisc noqueue state UNKNOWN qlen <span class="token number">1000</span>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00    inet <span class="token number">127.0</span>.0.1/8 scope <span class="token function">host</span> lo       valid_lft forever preferred_lft forever<span class="token number">7</span>: eth0@if8: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue state UP     link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff    inet <span class="token number">172.17</span>.0.2/16 brd <span class="token number">172.17</span>.255.255 scope global eth0       valid_lft forever preferred_lft forever<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Compared to the previous container with <code>none</code> network mode, this new container has one more network interface <code>eth0</code> and got an ip <code>172.17.0.2</code>.</p><p>Then we can check the network state of the current environment:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Inspect the ethernet bridge configuration</span>$ brctl showbridge name     bridge <span class="token function">id</span>               STP enabled     interfacesdocker0         <span class="token number">8000</span>.0242a1f90aad       no              veth80ec58c$ <span class="token function">ip</span> <span class="token function">link</span> show<span class="token punctuation">..</span>.<span class="token number">3</span>: docker0: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue state UP mode DEFAULT group default     link/ether 02:42:8a:b4:55:4d brd ff:ff:ff:ff:ff:ff<span class="token number">8</span>: veth80ec58c@if7: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue master docker0 state UP mode DEFAULT group default     link/ether 0e:e2:2d:20:d2:ad brd ff:ff:ff:ff:ff:ff link-netnsid <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Apparently, now that there’s a new interface <code>veth80ec58c</code> who is connecting to docker0. And also this new interface(<code>veth80ec58c</code>) and <code>interface 7</code> (shown in the container as interface <code>eth0</code>) are two connected endpoints of a <code>veth pair</code> that act as tunnels between network namespaces.</p><p><img src="docker_bridge.png" alt="docker_bridge.png" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="docker_bridge.png" class="lozad post-image"></p><h2 id="Communication-between-pods"><a href="#Communication-between-pods" class="headerlink" title="Communication between pods"></a>Communication between pods</h2><p> Now that we can create another two containers <code>bridge-alpine2</code> and <code>bridge-alpine3</code>:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Create a new container</span>$ docker run --rm -dit --name bridge-alpine2 alpine ash$ docker run --rm -dit --name bridge-alpine3 alpine ash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Then we can observe that there’re two new interfaces that are connecting to docker0:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ brctl show                    bridge name     bridge <span class="token function">id</span>       STP enabled       interfacesdocker0         <span class="token number">8000</span>.0242a1f90aad       no       veth4a318ba                                                 veth80ec58c                                                 vethd234967<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> We are going to ping container <code>bridge-alpine</code> from container <code>bridge-alpine2</code> using its IP (<code>172.17.0.2</code>) to observe the communication between pods.:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ docker <span class="token builtin class-name">exec</span> -it bridge-alpine2 /bin/sh<span class="token comment"># Inside container bridge-alpine2(172.17.0.3)</span>$ <span class="token function">ping</span> <span class="token number">172.17</span>.0.2PING <span class="token number">172.17</span>.0.2 <span class="token punctuation">(</span><span class="token number">172.17</span>.0.2<span class="token punctuation">)</span>: <span class="token number">56</span> data bytes<span class="token number">64</span> bytes from <span class="token number">172.17</span>.0.2: <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">64</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">0.333</span> ms<span class="token number">64</span> bytes from <span class="token number">172.17</span>.0.2: <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">64</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">0.151</span> ms<span class="token comment"># Host</span><span class="token comment"># Capture package from docker0</span>$ tcpdump -i docker0 -v -nn -e -ttcpdump: listening on docker0, link-type EN10MB <span class="token punctuation">(</span>Ethernet<span class="token punctuation">)</span>, capture size <span class="token number">262144</span> bytes02:42:ac:11:00:03 <span class="token operator">></span> **ff:ff:ff:ff:ff:ff**, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Request who-has <span class="token number">172.17</span>.0.2 tell <span class="token number">172.17</span>.0.3, length <span class="token number">28</span>02:42:ac:11:00:02 <span class="token operator">></span> 02:42:ac:11:00:03, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Reply <span class="token number">172.17</span>.0.2 is-at 02:42:ac:11:00:02, length <span class="token number">28</span>02:42:ac:11:00:03 <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">7910</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.3 <span class="token operator">></span> <span class="token number">172.17</span>.0.2: ICMP <span class="token builtin class-name">echo</span> request, <span class="token function">id</span> <span class="token number">16</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span>02:42:ac:11:00:02 <span class="token operator">></span> 02:42:ac:11:00:03, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">59835</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>none<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2 <span class="token operator">></span> <span class="token number">172.17</span>.0.3: ICMP <span class="token builtin class-name">echo</span> reply, <span class="token function">id</span> <span class="token number">16</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span>02:42:ac:11:00:03 <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">7986</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span><span class="token comment"># Container bridge-alpine2</span>$ tcpdump -i veth4a318ba -v -nn -e -t02:42:ac:11:00:03 <span class="token operator">></span> ff:ff:ff:ff:ff:ff, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Request who-has <span class="token number">172.17</span>.0.2 tell <span class="token number">172.17</span>.0.3, length <span class="token number">28</span>02:42:ac:11:00:02 <span class="token operator">></span> 02:42:ac:11:00:03, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Reply <span class="token number">172.17</span>.0.2 is-at 02:42:ac:11:00:02, length <span class="token number">28</span>02:42:ac:11:00:03 <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">56762</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.3 <span class="token operator">></span> <span class="token number">172.17</span>.0.2: ICMP <span class="token builtin class-name">echo</span> request, <span class="token function">id</span> <span class="token number">17</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span>02:42:ac:11:00:02 <span class="token operator">></span> 02:42:ac:11:00:03, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">55430</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>none<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2 <span class="token operator">></span> <span class="token number">172.17</span>.0.3: ICMP <span class="token builtin class-name">echo</span> reply, <span class="token function">id</span> <span class="token number">17</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span><span class="token comment"># Container bridge-alpine</span>$ tcpdump -i veth80ec58c -v -nn -e -ttcpdump: listening on veth80ec58c, link-type EN10MB <span class="token punctuation">(</span>Ethernet<span class="token punctuation">)</span>, capture size <span class="token number">262144</span> bytes02:42:ac:11:00:03 <span class="token operator">></span> ff:ff:ff:ff:ff:ff, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Request who-has <span class="token number">172.17</span>.0.2 tell <span class="token number">172.17</span>.0.3, length <span class="token number">28</span>02:42:ac:11:00:02 <span class="token operator">></span> 02:42:ac:11:00:03, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Reply <span class="token number">172.17</span>.0.2 is-at 02:42:ac:11:00:02, length <span class="token number">28</span>02:42:ac:11:00:03 <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">7910</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.3 <span class="token operator">></span> <span class="token number">172.17</span>.0.2: ICMP <span class="token builtin class-name">echo</span> request, <span class="token function">id</span> <span class="token number">16</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span>02:42:ac:11:00:02 <span class="token operator">></span> 02:42:ac:11:00:03, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">59835</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>none<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2 <span class="token operator">></span> <span class="token number">172.17</span>.0.3: ICMP <span class="token builtin class-name">echo</span> reply, <span class="token function">id</span> <span class="token number">16</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span><span class="token comment"># Container bridge-alpine3</span>$ tcpdump -i vethd234967 -v -nn -e -ttcpdump: listening on vethd234967, link-type EN10MB <span class="token punctuation">(</span>Ethernet<span class="token punctuation">)</span>, capture size <span class="token number">262144</span> bytes02:42:ac:11:00:03 <span class="token operator">></span> ff:ff:ff:ff:ff:ff, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Request who-has <span class="token number">172.17</span>.0.2 tell <span class="token number">172.17</span>.0.3, length <span class="token number">28</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Network-traffic-analysis"><a href="#Network-traffic-analysis" class="headerlink" title="Network traffic analysis"></a>Network traffic analysis</h3><p>According to the results that are shown above, the process is a bit different:</p><ol><li><strong>Use ARP to get the MAC address of the target container：</strong></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># bridge-alpine2 container</span>$ route -nKernel IP routing tableDestination     Gateway         Genmask         Flags Metric Ref    Use Iface<span class="token number">0.0</span>.0.0         <span class="token number">172.17</span>.0.1      <span class="token number">0.0</span>.0.0         UG    <span class="token number">0</span>      <span class="token number">0</span>        <span class="token number">0</span> eth0<span class="token number">172.17</span>.0.0      <span class="token number">0.0</span>.0.0         <span class="token number">255.255</span>.0.0     U     <span class="token number">0</span>      <span class="token number">0</span>        <span class="token number">0</span> eth0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>According to the IP routing table of container bridge-alpine2 shown above, when the container wants to ping another container in the same subnet(172.17.0.0/16), the message can be directly sent to them, instead of being sent to the gateway. But it needs to know the MAC address of the target container first.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># bridge-alpine2's packages</span>02:42:ac:11:00:03 <span class="token operator">></span> ff:ff:ff:ff:ff:ff, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Request who-has <span class="token number">172.17</span>.0.2 tell <span class="token number">172.17</span>.0.3, length <span class="token number">28</span>02:42:ac:11:00:02 <span class="token operator">></span> 02:42:ac:11:00:03, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Reply <span class="token number">172.17</span>.0.2 is-at 02:42:ac:11:00:02, length <span class="token number">28</span><span class="token comment"># docker0's packcages </span>02:42:ac:11:00:03 <span class="token operator">></span> **ff:ff:ff:ff:ff:ff**, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Request who-has <span class="token number">172.17</span>.0.2 tell <span class="token number">172.17</span>.0.3, length <span class="token number">28</span>02:42:ac:11:00:02 <span class="token operator">></span> 02:42:ac:11:00:03, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Reply <span class="token number">172.17</span>.0.2 is-at 02:42:ac:11:00:02, length <span class="token number">28</span><span class="token comment"># bridge-alpine's packages</span>02:42:ac:11:00:03 <span class="token operator">></span> **ff:ff:ff:ff:ff:ff**, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Request who-has <span class="token number">172.17</span>.0.2 tell <span class="token number">172.17</span>.0.3, length <span class="token number">28</span>02:42:ac:11:00:02 <span class="token operator">></span> 02:42:ac:11:00:03, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Reply <span class="token number">172.17</span>.0.2 is-at 02:42:ac:11:00:02, length <span class="token number">28</span><span class="token comment"># bridge-alpine3's packages</span>02:42:ac:11:00:03 <span class="token operator">></span> **ff:ff:ff:ff:ff:ff**, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Request who-has <span class="token number">172.17</span>.0.2 tell <span class="token number">172.17</span>.0.3, length <span class="token number">28</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>So, from the content shown above, we can observe that the container broadcasted the ARP message using the broadcast MAC address(<strong>ff:ff:ff:ff:ff:ff</strong>). ARP request will be sent to all the containers which are connecting to docker0, but only the target container bridge-alpine(172.17.0.2) replied with its MAC address(02:42:ac:11:00:02).</p><ol><li><strong>Send packages (ICMP)</strong></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># bridge-alpine2's packages</span>02:42:ac:11:00:03 <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">56762</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.3 <span class="token operator">></span> <span class="token number">172.17</span>.0.2: ICMP <span class="token builtin class-name">echo</span> request, <span class="token function">id</span> <span class="token number">17</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span>02:42:ac:11:00:02 <span class="token operator">></span> 02:42:ac:11:00:03, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">55430</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>none<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2 <span class="token operator">></span> <span class="token number">172.17</span>.0.3: ICMP <span class="token builtin class-name">echo</span> reply, <span class="token function">id</span> <span class="token number">17</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span><span class="token comment"># docker0's packages</span>02:42:ac:11:00:03 <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">7910</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.3 <span class="token operator">></span> <span class="token number">172.17</span>.0.2: ICMP <span class="token builtin class-name">echo</span> request, <span class="token function">id</span> <span class="token number">16</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span>02:42:ac:11:00:02 <span class="token operator">></span> 02:42:ac:11:00:03, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">59835</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>none<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2 <span class="token operator">></span> <span class="token number">172.17</span>.0.3: ICMP <span class="token builtin class-name">echo</span> reply, <span class="token function">id</span> <span class="token number">16</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span><span class="token comment"># bridge-alpine's packages</span>02:42:ac:11:00:03 <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">7910</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.3 <span class="token operator">></span> <span class="token number">172.17</span>.0.2: ICMP <span class="token builtin class-name">echo</span> request, <span class="token function">id</span> <span class="token number">16</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span>02:42:ac:11:00:02 <span class="token operator">></span> 02:42:ac:11:00:03, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">59835</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>none<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2 <span class="token operator">></span> <span class="token number">172.17</span>.0.3: ICMP <span class="token builtin class-name">echo</span> reply, <span class="token function">id</span> <span class="token number">16</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>With the IP and MAC address, now container bridge-alpine2 can start to send IMCP messages to container bridge-alpine:</p><p><img src="docker_bridge_internal.png" alt="docker_bridge_internal.png" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="docker_bridge_internal.png" class="lozad post-image"></p><h2 id="Communicate-with-external-network"><a href="#Communicate-with-external-network" class="headerlink" title="Communicate with external network"></a>Communicate with external network</h2><p>Let’s see what will happen if this container tries to access an <code>external network</code>. The original state of the local environment is shown below:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Show the system ARP cache </span>$ arp -vAddress                  HWtype  HWaddress           Flags Mask            Ifacegateway                  ether   <span class="token number">70</span>:db:98:82:a1:c0   C                     ens192<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Container bridge-alpine2 and bridge-alpine3 have been removed from the local host.</p><p>We can ping a website from a container and use <code>tcpdump</code> to catch the packets during this process:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Ping a website from container with bridge network type</span>$ docker <span class="token builtin class-name">exec</span> bridge-alpine <span class="token function">ping</span> www.baidu.comPING www.baidu.com <span class="token punctuation">(</span><span class="token number">103.235</span>.46.40<span class="token punctuation">)</span>: <span class="token number">56</span> data bytes<span class="token number">64</span> bytes from <span class="token number">103.235</span>.46.40: <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">40</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">186.518</span> ms<span class="token number">64</span> bytes from <span class="token number">103.235</span>.46.40: <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">40</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">187.523</span> ms<span class="token punctuation">..</span>.<span class="token comment"># Get packets from one of the endpoints of the veth pairs which connects </span><span class="token comment"># container's network namespace and docker0</span>$ tcpdump -i veth80ec58c -v -nn -e02:42:ac:11:00:02 <span class="token operator">></span> 02:42:a1:f9:0a:ad, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Request who-has **172.17.0.1** tell <span class="token number">172.17</span>.0.2, length <span class="token number">28</span>02:42:a1:f9:0a:ad <span class="token operator">></span> 02:42:ac:11:00:02, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Reply <span class="token number">172.17</span>.0.1 is-at **02:42:a1:f9:0a:ad**, length <span class="token number">2806</span>:38:42.580163 ARP, Reply localhost.localdomain is-at 02:42:8a:b4:55:4d <span class="token punctuation">(</span>oui Unknown<span class="token punctuation">)</span>, length <span class="token number">28</span>02:42:ac:11:00:02 <span class="token operator">></span> **02:42:a1:f9:0a:ad**, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">73</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">46041</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto UDP <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>, length <span class="token number">59</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2.37221 <span class="token operator">></span> <span class="token number">8.8</span>.8.8.53: <span class="token number">28492</span>+ A? www.baidu.com. <span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span>02:42:ac:11:00:02 <span class="token operator">></span> **02:42:a1:f9:0a:ad**, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">73</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">53494</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto UDP <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>, length <span class="token number">59</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2.37221 <span class="token operator">></span> <span class="token number">8.8</span>.4.4.53: <span class="token number">28492</span>+ A? www.baidu.com. <span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span>02:42:ac:11:00:02 <span class="token operator">></span> **02:42:a1:f9:0a:ad**, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">73</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">46042</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto UDP <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>, length <span class="token number">59</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2.37221 <span class="token operator">></span> <span class="token number">8.8</span>.8.8.53: <span class="token number">29411</span>+ AAAA? www.baidu.com. <span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span>02:42:ac:11:00:02 <span class="token operator">></span> **02:42:a1:f9:0a:ad**, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">73</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">53495</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto UDP <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>, length <span class="token number">59</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2.37221 <span class="token operator">></span> <span class="token number">8.8</span>.4.4.53: <span class="token number">29411</span>+ AAAA? www.baidu.com. <span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span>**02:42:a1:f9:0a:ad** <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">132</span>: <span class="token punctuation">(</span>tos 0x20, ttl <span class="token number">101</span>, <span class="token function">id</span> <span class="token number">57650</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>none<span class="token punctuation">]</span>, proto UDP <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>, length <span class="token number">118</span><span class="token punctuation">)</span>    <span class="token number">8.8</span>.8.8.53 <span class="token operator">></span> <span class="token number">172.17</span>.0.2.37221: <span class="token number">28492</span> <span class="token number">3</span>/0/0 www.baidu.com. CNAME www.a.shifen.com., www.a.shifen.com. A <span class="token number">14.215</span>.177.38, www.a.shifen.com. A <span class="token number">14.215</span>.177.39 <span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>**02:42:a1:f9:0a:ad** <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">157</span>: <span class="token punctuation">(</span>tos 0x20, ttl <span class="token number">101</span>, <span class="token function">id</span> <span class="token number">29948</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>none<span class="token punctuation">]</span>, proto UDP <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>, length <span class="token number">143</span><span class="token punctuation">)</span>    <span class="token number">8.8</span>.8.8.53 <span class="token operator">></span> <span class="token number">172.17</span>.0.2.37221: <span class="token number">29411</span> <span class="token number">1</span>/1/0 www.baidu.com. CNAME www.a.shifen.com. <span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">)</span>02:42:ac:11:00:02 <span class="token operator">></span> **02:42:a1:f9:0a:ad**, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">31149</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2 <span class="token operator">></span> <span class="token number">14.215</span>.177.38: ICMP <span class="token builtin class-name">echo</span> request, <span class="token function">id</span> <span class="token number">69</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span>**02:42:a1:f9:0a:ad** <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x20, ttl <span class="token number">51</span>, <span class="token function">id</span> <span class="token number">31149</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">14.215</span>.177.38 <span class="token operator">></span> <span class="token number">172.17</span>.0.2: ICMP <span class="token builtin class-name">echo</span> reply, <span class="token function">id</span> <span class="token number">69</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Network-traffic-analysis-1"><a href="#Network-traffic-analysis-1" class="headerlink" title="Network traffic analysis"></a>Network traffic analysis</h3><p>There’re several steps shown in this process, let’s go through them one by one:</p><ol><li><strong>Use ARP to get the MAC address of the gateway：</strong></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># bridge-alpine container</span>$ route -nKernel IP routing tableDestination     Gateway         Genmask         Flags Metric Ref    Use Iface<span class="token number">0.0</span>.0.0         <span class="token number">172.17</span>.0.1      <span class="token number">0.0</span>.0.0         UG    <span class="token number">0</span>      <span class="token number">0</span>        <span class="token number">0</span> eth0<span class="token number">172.17</span>.0.0      <span class="token number">0.0</span>.0.0         <span class="token number">255.255</span>.0.0     U     <span class="token number">0</span>      <span class="token number">0</span>        <span class="token number">0</span> eth0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Different from communicating with containers also connecting to docker0, Both DNS/ICMP messages need to be sent to external networks. In this case, according to the table shown above, container bridge-alpine should directly send messages to the gateway(172.17.0.1)</p><p>Somehow knowing the IP of the gateway is not enough for the packages to be delivered, they need the MAC address as well, so that the container used <code>ARP</code> to ask for the <code>MAC address</code> of the gateway(do not need to board cast):</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">02:42:ac:11:00:02 <span class="token operator">></span> 02:42:a1:f9:0a:ad, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Request who-has **172.17.0.1** tell <span class="token number">172.17</span>.0.2, length <span class="token number">28</span>02:42:a1:f9:0a:ad <span class="token operator">></span> 02:42:ac:11:00:02, ethertype ARP <span class="token punctuation">(</span>0x0806<span class="token punctuation">)</span>, length <span class="token number">42</span>: Ethernet <span class="token punctuation">(</span>len <span class="token number">6</span><span class="token punctuation">)</span>, IPv4 <span class="token punctuation">(</span>len <span class="token number">4</span><span class="token punctuation">)</span>, Reply <span class="token number">172.17</span>.0.1 is-at **02:42:a1:f9:0a:ad**, length <span class="token number">2806</span>:38:42.580163 ARP, Reply localhost.localdomain is-at 02:42:8a:b4:55:4d <span class="token punctuation">(</span>oui Unknown<span class="token punctuation">)</span>, length <span class="token number">28</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>According to what we’ve got previously, the MAC address <code>02:42:a1:f9:0a:ad</code> the container got from ARP is the MAC address of docker0 on the host computer:</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">ip</span> <span class="token function">link</span> show<span class="token punctuation">..</span>.<span class="token number">3</span>: docker0: <span class="token operator">&lt;</span>NO-CARRIER,BROADCAST,MULTICAST,UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue state DOWN mode DEFAULT group default     link/ether **02:42:8a:b4:55:4d** brd ff:ff:ff:ff:ff:ff<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><strong>Resolve domain name (DNS)：</strong></li></ol><p>Also, the container needs to know the IP address of the target website, so that it will ask the name server(8.8.8.8) in order to resolve the domain name:</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">02:42:ac:11:00:02 <span class="token operator">></span> **02:42:a1:f9:0a:ad**, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">73</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">46041</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto UDP <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>, length <span class="token number">59</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2.37221 <span class="token operator">></span> <span class="token number">8.8</span>.8.8.53: <span class="token number">28492</span>+ A? www.baidu.com. <span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span>02:42:ac:11:00:02 <span class="token operator">></span> **02:42:a1:f9:0a:ad**, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">73</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">53494</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto UDP <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>, length <span class="token number">59</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2.37221 <span class="token operator">></span> <span class="token number">8.8</span>.4.4.53: <span class="token number">28492</span>+ A? www.baidu.com. <span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span>02:42:ac:11:00:02 <span class="token operator">></span> **02:42:a1:f9:0a:ad**, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">73</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">46042</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto UDP <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>, length <span class="token number">59</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2.37221 <span class="token operator">></span> <span class="token number">8.8</span>.8.8.53: <span class="token number">29411</span>+ AAAA? www.baidu.com. <span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span>02:42:ac:11:00:02 <span class="token operator">></span> **02:42:a1:f9:0a:ad**, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">73</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">53495</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto UDP <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>, length <span class="token number">59</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2.37221 <span class="token operator">></span> <span class="token number">8.8</span>.4.4.53: <span class="token number">29411</span>+ AAAA? www.baidu.com. <span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span>**02:42:a1:f9:0a:ad** <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">132</span>: <span class="token punctuation">(</span>tos 0x20, ttl <span class="token number">101</span>, <span class="token function">id</span> <span class="token number">57650</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>none<span class="token punctuation">]</span>, proto UDP <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>, length <span class="token number">118</span><span class="token punctuation">)</span>    <span class="token number">8.8</span>.8.8.53 <span class="token operator">></span> <span class="token number">172.17</span>.0.2.37221: <span class="token number">28492</span> <span class="token number">3</span>/0/0 www.baidu.com. CNAME www.a.shifen.com., www.a.shifen.com. A <span class="token number">14.215</span>.177.38, www.a.shifen.com. A <span class="token number">14.215</span>.177.39 <span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>**02:42:a1:f9:0a:ad** <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">157</span>: <span class="token punctuation">(</span>tos 0x20, ttl <span class="token number">101</span>, <span class="token function">id</span> <span class="token number">29948</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>none<span class="token punctuation">]</span>, proto UDP <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>, length <span class="token number">143</span><span class="token punctuation">)</span>    <span class="token number">8.8</span>.8.8.53 <span class="token operator">></span> <span class="token number">172.17</span>.0.2.37221: <span class="token number">29411</span> <span class="token number">1</span>/1/0 www.baidu.com. CNAME www.a.shifen.com. <span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>I’m not going to talk about the detail of DNS in this article. We only need to know that eventually, the container knew that the target IP is <code>14.215.177.38</code>.</p><ol><li><strong>Send packages (ICMP):</strong></li></ol><p>Now that the container’s already got the IP address of the target website and the MAC address of the gateway, it can send all the ICMP packages now:</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">02:42:ac:11:00:02 <span class="token operator">></span> **02:42:a1:f9:0a:ad**, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">64</span>, <span class="token function">id</span> <span class="token number">31149</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">172.17</span>.0.2 <span class="token operator">></span> <span class="token number">14.215</span>.177.38: ICMP <span class="token builtin class-name">echo</span> request, <span class="token function">id</span> <span class="token number">69</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span>**02:42:a1:f9:0a:ad** <span class="token operator">></span> 02:42:ac:11:00:02, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x20, ttl <span class="token number">51</span>, <span class="token function">id</span> <span class="token number">31149</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">14.215</span>.177.38 <span class="token operator">></span> <span class="token number">172.17</span>.0.2: ICMP <span class="token builtin class-name">echo</span> reply, <span class="token function">id</span> <span class="token number">69</span>, <span class="token function">seq</span> <span class="token number">0</span>, length <span class="token number">64</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>If we also use <code>tcpdump</code> to catch the package from ens192, we will get these contents:</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ tcpdump -i ens192 -v -nn -e -t <span class="token function">host</span> <span class="token number">14.215</span>.177.3800:50:56:ba:06:b7 <span class="token operator">></span> <span class="token number">70</span>:db:98:82:a1:c0, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x0, ttl <span class="token number">63</span>, <span class="token function">id</span> <span class="token number">13766</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">10.103</span>.80.33 <span class="token operator">></span> <span class="token number">14.215</span>.177.38: ICMP <span class="token builtin class-name">echo</span> request, <span class="token function">id</span> <span class="token number">113</span>, <span class="token function">seq</span> <span class="token number">20</span>, length <span class="token number">64</span><span class="token number">70</span>:db:98:82:a1:c0 <span class="token operator">></span> 00:50:56:ba:06:b7, ethertype IPv4 <span class="token punctuation">(</span>0x0800<span class="token punctuation">)</span>, length <span class="token number">98</span>: <span class="token punctuation">(</span>tos 0x20, ttl <span class="token number">41</span>, <span class="token function">id</span> <span class="token number">13766</span>, offset <span class="token number">0</span>, flags <span class="token punctuation">[</span>DF<span class="token punctuation">]</span>, proto ICMP <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>, length <span class="token number">84</span><span class="token punctuation">)</span>    <span class="token number">45.113</span>.192.101 <span class="token operator">></span> <span class="token number">10.103</span>.80.33: ICMP <span class="token builtin class-name">echo</span> reply, <span class="token function">id</span> <span class="token number">113</span>, <span class="token function">seq</span> <span class="token number">20</span>, length <span class="token number">64</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>The whole process can be shown as:<br><img src="docker_bridge_external.png" alt="docker_bridge_external.png" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="docker_bridge_external.png" class="lozad post-image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;p&gt;According to docker’s official document, docke</summary>
      
    
    
    
    
    <category term="Docker" scheme="http://lzreload.com/en/tags/Docker/"/>
    
    <category term="Network" scheme="http://lzreload.com/en/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title>About Kubernetes configuration: ConfigMap</title>
    <link href="http://lzreload.com/en/2022/05/08/About-Kubernetes-configuration-ConfigMap/"/>
    <id>http://lzreload.com/en/2022/05/08/About-Kubernetes-configuration-ConfigMap/</id>
    <published>2022-05-08T11:38:32.000Z</published>
    <updated>2022-09-16T11:10:12.628Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Kubernete-Configuration-ConfigMap"><a href="#Kubernete-Configuration-ConfigMap" class="headerlink" title="Kubernete Configuration - ConfigMap"></a>Kubernete Configuration - ConfigMap</h1><h1 id="Creating-ConfigMap"><a href="#Creating-ConfigMap" class="headerlink" title="Creating ConfigMap"></a>Creating ConfigMap</h1><h2 id="Create-from-folder"><a href="#Create-from-folder" class="headerlink" title="Create from folder"></a>Create from folder</h2><p><code>kubectl create folder-cm --from-file &lt;folder_name&gt;</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Create with folder</span>$ kubectl create folder-cm --from-file config$ kubectl get cm/folder-cm -o yamlapiVersion: v1data:  config.txt: <span class="token operator">|</span>    <span class="token assign-left variable">Test</span><span class="token operator">=</span>test  test.txt: <span class="token operator">|</span>    <span class="token assign-left variable">DONT</span><span class="token operator">=</span>KNOWkind: ConfigMapmetadata:  creationTimestamp: <span class="token string">"2022-05-02T15:53:44Z"</span>  name: folder-cm  namespace: default  resourceVersion: <span class="token string">"41428"</span>  uid: 9f71a652-2350-4d55-be6e-5ef468cd45f8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Create-from-file"><a href="#Create-from-file" class="headerlink" title="Create from file"></a>Create from file</h2><p>💡Can create with multiple files, if create with all the files in the same folder, it’s same with creating from folder:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## Create with file</span>$ kubectl create cm file-cm --from-file config/config.txt --from-file config/test.txt$ kubectl get cm/file-cm -o yamlapiVersion: v1data:  config.txt: <span class="token operator">|</span>    <span class="token assign-left variable">Test</span><span class="token operator">=</span>test  test.txt: <span class="token operator">|</span>    <span class="token assign-left variable">DONT</span><span class="token operator">=</span>KNOWkind: ConfigMapmetadata:  creationTimestamp: <span class="token string">"2022-05-02T16:03:36Z"</span>  name: file-cm  namespace: default  resourceVersion: <span class="token string">"42433"</span>  uid: 17766fc1-cfd5-4b95-b00f-296844f23407<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>The name of the file will be the key of key-value pair in <code>ConfigMap</code> while the content of the file will be the value.</p><p>If we want some specific keys, we can create the ConfigMap with given key:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl create cm key-cm --from-file<span class="token operator">=</span>key<span class="token operator">=</span>config.txt$ kubectl get cm/key-cm -o yamlapiVersion: v1data:  key: <span class="token operator">|</span>    <span class="token assign-left variable">DB_URL</span><span class="token operator">=</span>localhost:3306    <span class="token assign-left variable">DB_USERNAME</span><span class="token operator">=</span>postgreskind: ConfigMapmetadata:  creationTimestamp: <span class="token string">"2022-05-03T15:16:25Z"</span>  name: key-cm  namespace: default  resourceVersion: <span class="token string">"63721"</span>  uid: eb3c93ca-fcfc-42bd-82ce-2d8cddbfc900<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Create-from-key-value-pairs"><a href="#Create-from-key-value-pairs" class="headerlink" title="Create from key-value pairs"></a>Create from key-value pairs</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl create cm value-cm --from-literal<span class="token operator">=</span>Test<span class="token operator">=</span>test$ kubectl get cm/value-cm -o yamlapiVersion: v1data:  Test: <span class="token builtin class-name">test</span>kind: ConfigMapmetadata:  creationTimestamp: <span class="token string">"2022-05-03T15:26:07Z"</span>  name: value-cm  namespace: default  resourceVersion: <span class="token string">"64703"</span>  uid: f5431bb3-6276-48e8-85e0-33b0ef1a7243<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Create-from-env-file"><a href="#Create-from-env-file" class="headerlink" title="Create from env file"></a>Create from env file</h2><p>💡env file can be .<code>env</code> file and <code>.txt</code> file and so on ..</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl create cm env-cm --from-env-file<span class="token operator">=</span>config.txt$ kubectl get cm/env-cm -o yamlapiVersion: v1data:  DB_URL: localhost:3306  DB_USERNAME: postgreskind: ConfigMapmetadata:  creationTimestamp: <span class="token string">"2022-05-03T15:30:49Z"</span>  name: env-cm  namespace: default  resourceVersion: <span class="token string">"65184"</span>  uid: 60dba811-8fa9-4bb1-9e7b-9d45a02009eb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Comparing with <code>Create from file</code>, in which same file is used to create configMap, instead of using filename/given key as key, and file content as value, <code>creating from env file</code> reads the file first, and uses <code>key-value pairs</code> in the file to create ConfigMap.</p><h1 id="Using-configMap"><a href="#Using-configMap" class="headerlink" title="Using configMap"></a>Using configMap</h1><h2 id="Use-ConfigMap-as-files-in-pod"><a href="#Use-ConfigMap-as-files-in-pod" class="headerlink" title="Use ConfigMap as files in pod"></a>Use ConfigMap as files in pod</h2><h3 id="Mount-configMap"><a href="#Mount-configMap" class="headerlink" title="Mount configMap"></a>Mount configMap</h3><p>ConfigMap can be mounted to pods as volumes. Here is the yaml file of a pod who mounts all the ComfigMaps we’ve created above (folder-cm, file-cm, value-cm, env-cm):</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># file-pod.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token null important">null</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> file<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx    <span class="token key atrule">name</span><span class="token punctuation">:</span> pod    <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> folder      <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"folder"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> file      <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"file"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> value      <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"value"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> env      <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"env"</span>  <span class="token key atrule">dnsPolicy</span><span class="token punctuation">:</span> ClusterFirst  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Always  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> folder    <span class="token key atrule">configMap</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> folder<span class="token punctuation">-</span>cm  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> file    <span class="token key atrule">configMap</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> file<span class="token punctuation">-</span>cm  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> value    <span class="token key atrule">configMap</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> value<span class="token punctuation">-</span>cm  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> env    <span class="token key atrule">configMap</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> env<span class="token punctuation">-</span>cm<span class="token key atrule">status</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Then if we log into the pod and check what is going on inside:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl <span class="token builtin class-name">exec</span> -it pod/file-pod -- <span class="token function">bash</span><span class="token comment"># Inside pod</span>$ tree -L <span class="token number">2</span><span class="token punctuation">..</span>.<span class="token operator">|</span>-- <span class="token function">env</span><span class="token operator">|</span>   <span class="token operator">|</span>-- DB_URL -<span class="token operator">></span> <span class="token punctuation">..</span>data/DB_URL<span class="token operator">|</span>   <span class="token variable"><span class="token variable">`</span>-- DB_USERNAME -<span class="token operator">></span> <span class="token punctuation">..</span>data/DB_USERNAME<span class="token operator">|</span>-- <span class="token function">file</span><span class="token operator">|</span>   <span class="token operator">|</span>-- config.txt -<span class="token operator">></span> <span class="token punctuation">..</span>data/config.txt<span class="token operator">|</span>   <span class="token variable">`</span></span>-- test.txt -<span class="token operator">></span> <span class="token punctuation">..</span>data/test.txt<span class="token operator">|</span>-- folder<span class="token operator">|</span>   <span class="token operator">|</span>-- config.txt -<span class="token operator">></span> <span class="token punctuation">..</span>data/config.txt<span class="token operator">|</span>   <span class="token variable"><span class="token variable">`</span>-- test.txt -<span class="token operator">></span> <span class="token punctuation">..</span>data/test.txt<span class="token operator">|</span>-- value<span class="token operator">|</span>   <span class="token variable">`</span></span>-- Test -<span class="token operator">></span> <span class="token punctuation">..</span>data/Test<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Apparently, no matter from what we created the <code>ConfigMap</code>, the pod who mounted them would generate a file for each key-value pairs in <code>ConfigMap</code> using key as filename and value as content.</p><p>💡Mounting ConfigMap to pods as volumes is setting to <code>Read-Only</code> by default.</p><h3 id="Mount-ConfigMap-with-SubPath"><a href="#Mount-ConfigMap-with-SubPath" class="headerlink" title="Mount ConfigMap with SubPath"></a>Mount ConfigMap with SubPath</h3><p>It’s mentioned that when we mount a <code>ConfigMap</code> to a pod, a folder named as what is specified in <code>spec.containers.volumeMounts.mountPath</code> in the yaml file will be created (if there’s already a folder with same name, the original folder will be covered and the files in this folder cannot been seen anymore.)</p><p>But there will be a situation that we only want to create a file based on the <code>ConfigMap</code> and put it into a folder which already exited. </p><p>For example, folder <code>/etc/nginx/conf.d</code> which already has a file <code>default.conf</code> for Nginx. Instead of making this file disappear, we only want to add a new file into this folder. Then we need <code>SubPath</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># file-pod2</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token null important">null</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> file<span class="token punctuation">-</span>pod2<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx    <span class="token key atrule">name</span><span class="token punctuation">:</span> pod    <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> folder      <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"folder"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> file      <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/etc/nginx/conf.d/config.txt"</span>      <span class="token key atrule">subPath</span><span class="token punctuation">:</span> <span class="token string">"config.txt"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> value      <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"value"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> env      <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"env"</span>  <span class="token key atrule">dnsPolicy</span><span class="token punctuation">:</span> ClusterFirst  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Always  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> folder    <span class="token key atrule">configMap</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> folder<span class="token punctuation">-</span>cm  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> file    <span class="token key atrule">configMap</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> file<span class="token punctuation">-</span>cm  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> value    <span class="token key atrule">configMap</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> value<span class="token punctuation">-</span>cm  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> env    <span class="token key atrule">configMap</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> env<span class="token punctuation">-</span>cm<span class="token key atrule">status</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>According to documentation of <code>Kubernetes 1.24</code>:</p><blockquote><p>The <code>volumeMounts.subPath</code>property specifies a sub-path inside the referenced volume instead of its root.</p></blockquote><p>So, consider each volume is a folder, then for <code>file</code> volume, it contains <code>config.txt</code> file and <code>text.txt</code> file. Then we can use relative path “config.txt” to point to <code>config.txt</code> file of <code>file volume</code> in <code>spec.containers.volumeMounts.subPath</code> property.</p><p>If we apply this yaml file again and log into the new pod:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ls</span><span class="token punctuation">..</span>. <span class="token function">env</span> folder value <span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Other folders are still here but just <code>file</code> folder is gone. Then we can check <code>/etc/nginx/conf.d</code> folder.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ls</span> /etc/nginx/conf.dconfig.txt  default.conf$ <span class="token function">cat</span> /etc/nginx/conf.d/config.txt<span class="token assign-left variable">Test</span><span class="token operator">=</span>test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>default.conf</code> file is still here and only <code>config.txt</code> file which is specified in <code>subPath</code> is create in this folder.</p><h3 id="Update-ConfigMap"><a href="#Update-ConfigMap" class="headerlink" title="Update ConfigMap"></a>Update ConfigMap</h3><p>Now, let’s see what will happen if we try to modify a ConfigMap. We edit two ConfigMaps: <code>file-cm</code> and <code>value-cm</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#file-cm</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">config.txt</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    Test=file-modified</span>  <span class="token key atrule">test.txt</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    DONT=KNOW</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token string">"2022-05-02T16:03:36Z"</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> file<span class="token punctuation">-</span>cm  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">resourceVersion</span><span class="token punctuation">:</span> <span class="token string">"281558"</span>  <span class="token key atrule">uid</span><span class="token punctuation">:</span> 17766fc1<span class="token punctuation">-</span>cfd5<span class="token punctuation">-</span>4b95<span class="token punctuation">-</span>b00f<span class="token punctuation">-</span>296844f23407<span class="token comment">#value-cm</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">Test</span><span class="token punctuation">:</span> value<span class="token punctuation">-</span>modified<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token string">"2022-05-03T15:26:07Z"</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> value<span class="token punctuation">-</span>cm  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">resourceVersion</span><span class="token punctuation">:</span> <span class="token string">"317489"</span>  <span class="token key atrule">uid</span><span class="token punctuation">:</span> f5431bb3<span class="token punctuation">-</span>6276<span class="token punctuation">-</span>48e8<span class="token punctuation">-</span>85e0<span class="token punctuation">-</span>33b0ef1a7243<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Then we can log into file-pod2, which we created in previous section, and check what happened after we modified the <code>ConfigMap</code>:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl <span class="token builtin class-name">exec</span> -it pod/file-pod2 -- <span class="token function">bash</span><span class="token comment"># Content has been updated</span>$ <span class="token function">cat</span> value/Testvalue-modified<span class="token comment"># Content remains the same</span>$ <span class="token function">cat</span> /etc/nginx/conf.d/config.txt<span class="token assign-left variable">Test</span><span class="token operator">=</span>test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>According to the result, after a <code>ConfigMap</code> is changed, the container who mounted this <code>ConfigMap</code> as volume will be updated as well. But there are several exceptions. </p><p>One of these exceptions is that if the container uses the <code>ConfigMap</code> as <code>SubPath</code> volume, then it won’t receive the update.</p><p>💡<code>ConfigMap</code> can be set immutable, <code>immutable ConfigMap</code> will not be watched constantly, which can reduce load on kube-<code>apiserver</code>.</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token punctuation">...</span><span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token punctuation">...</span><span class="token key atrule">immutable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Use-ConfigMap-as-environment-variables-in-pod"><a href="#Use-ConfigMap-as-environment-variables-in-pod" class="headerlink" title="Use ConfigMap as environment variables in pod"></a>Use ConfigMap as environment variables in pod</h2><h3 id="Using-specific-values-in-ConfigMap-as-environment-variables"><a href="#Using-specific-values-in-ConfigMap-as-environment-variables" class="headerlink" title="Using specific values in ConfigMap as environment variables"></a>Using specific values in ConfigMap as environment variables</h3><p>In order to use specific values in ConfigMap as <code>environment variables</code> in container, we used <code>spec.containers.env.valueFrom.configMapKeyRef</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># env-pod.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token null important">null</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> env<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx    <span class="token key atrule">name</span><span class="token punctuation">:</span> pod    <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token key atrule">env</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> FOLDER_KEY      <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>        <span class="token key atrule">configMapKeyRef</span><span class="token punctuation">:</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> folder<span class="token punctuation">-</span>cm          <span class="token key atrule">key</span><span class="token punctuation">:</span> test.txt    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ENV_KEY      <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>        <span class="token key atrule">configMapKeyRef</span><span class="token punctuation">:</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> env<span class="token punctuation">-</span>cm          <span class="token key atrule">key</span><span class="token punctuation">:</span> DB_URL  <span class="token key atrule">dnsPolicy</span><span class="token punctuation">:</span> ClusterFirst  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Always<span class="token key atrule">status</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Then create a new pod with this yaml file and checke the environment variables of it’s container:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl <span class="token builtin class-name">exec</span> pod/env-pod -- <span class="token function">env</span><span class="token punctuation">..</span>.<span class="token assign-left variable">FOLDER_KEY</span><span class="token operator">=</span>DONT<span class="token operator">=</span>KNOW<span class="token assign-left variable">ENV_KEY</span><span class="token operator">=</span>localhost:3306<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>The name of the variables are what we specified with <code>spec.containers.env.name</code>. Then it will search in the target <code>ConfigMap</code> which we specified with <code>spec.env.valueFrom.configMapKeyRef.name</code> in order to find the target key-value pair whose key equals to what we specified in <code>spec.env.valueFrom.configMapKeyRef.key</code>. The value of this environment variable will be the value of target key-value pair.</p><h3 id="Using-all-values-in-ConfigMap-as-environment-variables"><a href="#Using-all-values-in-ConfigMap-as-environment-variables" class="headerlink" title="Using all values in ConfigMap as environment variables"></a>Using all values in ConfigMap as <strong><strong>environment variables</strong></strong></h3><p>Here we will use <code>spec.containers.envFrom.configMapRef</code> to inject all the key-value pairs of a <code>ConfigMap</code> to a container as environment variables:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># all-env-pod.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token null important">null</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> all<span class="token punctuation">-</span>env<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx    <span class="token key atrule">name</span><span class="token punctuation">:</span> pod    <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token key atrule">envFrom</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">configMapRef</span><span class="token punctuation">:</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> env<span class="token punctuation">-</span>cm  <span class="token key atrule">dnsPolicy</span><span class="token punctuation">:</span> ClusterFirst  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Always<span class="token key atrule">status</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>After this yaml file is applied, the environment variables of the new containers are:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">$ kubectl exec pod/all<span class="token punctuation">-</span>env<span class="token punctuation">-</span>pod <span class="token punctuation">-</span><span class="token punctuation">-</span> env<span class="token punctuation">...</span>DB_URL=localhost<span class="token punctuation">:</span><span class="token number">3306</span>DB_USERNAME=postgres<span class="token punctuation">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>All the key-value pairs of <code>ConfigMap</code> are used as environment variable and their keys are the variable names while their values are the variable values.</p><h3 id="Update-ConfigMap-1"><a href="#Update-ConfigMap-1" class="headerlink" title="Update ConfigMap"></a>Update ConfigMap</h3><p>Same as what we mentioned in previous section - <code>Use ConfigMap as files in pod</code>, we are going to modified the ConfigMap and see what will happen to corresponding containers:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">## env-cm</span><span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">DB_URL</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span>3306_modified  <span class="token key atrule">DB_USERNAME</span><span class="token punctuation">:</span> postgres<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token string">"2022-05-03T15:30:49Z"</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> env<span class="token punctuation">-</span>cm  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">resourceVersion</span><span class="token punctuation">:</span> <span class="token string">"65184"</span>  <span class="token key atrule">uid</span><span class="token punctuation">:</span> 60dba811<span class="token punctuation">-</span>8fa9<span class="token punctuation">-</span>4bb1<span class="token punctuation">-</span>9e7b<span class="token punctuation">-</span>9d45a02009eb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>We changed the value of <code>DB_URL</code>, then environment variables of the previous two containers are:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl <span class="token builtin class-name">exec</span> pod/env-pod -- <span class="token function">env</span><span class="token punctuation">..</span>.<span class="token assign-left variable">FOLDER_KEY</span><span class="token operator">=</span>DONT<span class="token operator">=</span>KNOW<span class="token assign-left variable">ENV_KEY</span><span class="token operator">=</span>localhost:3306<span class="token punctuation">..</span>.$ kubectl <span class="token builtin class-name">exec</span> pod/all-env-pod -- <span class="token function">env</span><span class="token punctuation">..</span>.<span class="token assign-left variable">DB_URL</span><span class="token operator">=</span>localhost:3306<span class="token assign-left variable">DB_USERNAME</span><span class="token operator">=</span>postgres<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>The environment variables who are created from ConfigMap remain the same. This is the other situation that we talked about before in which corresponding containers will not receive the update of the ConfigMap.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Kubernete-Configuration-ConfigMap&quot;&gt;&lt;a href=&quot;#Kubernete-Configuration-ConfigMap&quot; class=&quot;headerlink&quot; title=&quot;Kubernete Configuration - </summary>
      
    
    
    
    
    <category term="Kubernetes" scheme="http://lzreload.com/en/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Go: About package heap</title>
    <link href="http://lzreload.com/en/2022/04/15/Golang-Heap/"/>
    <id>http://lzreload.com/en/2022/04/15/Golang-Heap/</id>
    <published>2022-04-15T09:21:52.000Z</published>
    <updated>2022-09-16T11:33:33.115Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Interfaces"><a href="#Interfaces" class="headerlink" title="Interfaces"></a>Interfaces</h2><p>Package <code>heap</code> defines <code>Interface</code> which contains <code>Interface</code> of package <code>sort</code>, and two methods: Push and Pop.</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// go1.18.1/src/container/heap/heap.go</span><span class="token keyword">package</span> heap<span class="token keyword">import</span> <span class="token string">"sort"</span><span class="token keyword">type</span> Interface <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>sort<span class="token punctuation">.</span>Interface<span class="token function">Push</span><span class="token punctuation">(</span>x any<span class="token punctuation">)</span> <span class="token comment">// add x as element Len()</span><span class="token function">Pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> any   <span class="token comment">// remove and return element Len() - 1.</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Interface</code> of package <code>sort</code> has 3 methods: Len, Less and Swap :</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> sort<span class="token comment">// An implementation of Interface can be sorted by the routines in this package.</span><span class="token comment">// The methods refer to elements of the underlying collection by integer index.</span><span class="token keyword">type</span> Interface <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span><span class="token comment">// Len is the number of elements in the collection.</span><span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token comment">// Less reports whether the element with index i</span><span class="token comment">// must sort before the element with index j.</span><span class="token function">Less</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">bool</span><span class="token comment">// Swap swaps the elements with indexes i and j.</span><span class="token function">Swap</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>It mains that in order to implement <code>Interface</code> of package heap, our structure should have 5 methods: Len, Less, Swap, Push and Pop.</p><p>For example:</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> MinHeap <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token keyword">func</span> <span class="token punctuation">(</span>m MinHeap<span class="token punctuation">)</span> <span class="token function">Less</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> m<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>m MinHeap<span class="token punctuation">)</span> <span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">len</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>m MinHeap<span class="token punctuation">)</span> <span class="token function">Swap</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>m <span class="token operator">*</span>MinHeap<span class="token punctuation">)</span> <span class="token function">Push</span><span class="token punctuation">(</span>x any<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token operator">*</span>m <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token operator">*</span>m<span class="token punctuation">,</span> x<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token punctuation">(</span>m <span class="token operator">*</span>MinHeap<span class="token punctuation">)</span> <span class="token function">Pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> any <span class="token punctuation">&#123;</span>size <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span><span class="token operator">*</span>m<span class="token punctuation">)</span>last <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token operator">*</span>m<span class="token punctuation">)</span><span class="token punctuation">[</span>size<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>m <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>m<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span>size<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">return</span> last<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Above is a new structure named MinHeap which implements all the methods of <code>Interface</code> in package <code>heap</code>.</p><p>Now that we’ve already defined a structure which has all these 5 methods, how do we use this package and how does this package work?</p><h2 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h2><p>There are 5 public functions in this package:</p><h3 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h3><p><code>Init</code> function will build a heap with given <code>Interface</code> who contains all the data.</p><p>According to the code from this package, <code>Init</code> will perform bottom-up construction in order to build the heap from array with O(n) time complexity. </p><ul><li>It will start from the last non-leaf node and swap it with its smallest child if this subtree does not meet the requirement of <code>Minheap</code>(In this example, we defined a minHeap, whose requirement is the parent node must smaller than all its childs). Here it will call the <code>Less</code> and <code>Swap</code> function which we defined for the <code>MinHeap</code> previously in order to compare and swap two nodes.</li><li>Then it will move to the next non-leaf node and keep swapping until the whole tree become a <code>MinHeap</code></li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">Init</span><span class="token punctuation">(</span>h Interface<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// heapify</span>n <span class="token operator">:=</span> h<span class="token punctuation">.</span><span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token operator">:=</span> n<span class="token operator">/</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span> <span class="token punctuation">&#123;</span><span class="token function">down</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> i<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">down</span><span class="token punctuation">(</span>h Interface<span class="token punctuation">,</span> i0<span class="token punctuation">,</span> n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span>i <span class="token operator">:=</span> i0<span class="token keyword">for</span> <span class="token punctuation">&#123;</span>j1 <span class="token operator">:=</span> <span class="token number">2</span><span class="token operator">*</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">if</span> j1 <span class="token operator">>=</span> n <span class="token operator">||</span> j1 <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span> <span class="token comment">// j1 &lt; 0 after int overflow</span><span class="token keyword">break</span><span class="token punctuation">&#125;</span>j <span class="token operator">:=</span> j1 <span class="token comment">// left child</span><span class="token keyword">if</span> j2 <span class="token operator">:=</span> j1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j2 <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> h<span class="token punctuation">.</span><span class="token function">Less</span><span class="token punctuation">(</span>j2<span class="token punctuation">,</span> j1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>j <span class="token operator">=</span> j2 <span class="token comment">// = 2*i + 2  // right child</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token operator">!</span>h<span class="token punctuation">.</span><span class="token function">Less</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">break</span><span class="token punctuation">&#125;</span>h<span class="token punctuation">.</span><span class="token function">Swap</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span>i <span class="token operator">=</span> j<span class="token punctuation">&#125;</span><span class="token keyword">return</span> i <span class="token operator">></span> i0<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>With the <code>MinHeap</code> struct which we’ve just define before:</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"[Heap] Start heap tast, creating original array ..."</span><span class="token punctuation">)</span>mh <span class="token operator">:=</span> <span class="token operator">&amp;</span>MinHeap<span class="token punctuation">&#123;</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">&#125;</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] Original array :%v\n"</span><span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"[Heap] Start to build minHeap..."</span><span class="token punctuation">)</span>heap<span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span>mh<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] MinHeap:%v\n"</span><span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>The <code>Init</code> function will build the heap like this:</p><p><img src="build_heap.png" alt="build_heap.png" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="build_heap.png" class="lozad post-image"></p><p>The output of previous code will be:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ go run main.go<span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> Start heap tast, creating original array <span class="token punctuation">..</span>.<span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> Original array :<span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">3</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">2</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> Start to build minHeap<span class="token punctuation">..</span>.<span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> MinHeap:<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">5</span> <span class="token number">8</span> <span class="token number">3</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Pop"><a href="#Pop" class="headerlink" title="Pop"></a>Pop</h3><p><code>Pop</code> function will swap the root with the last node of the array and shorten the length of current array in order to exclude this minimum data in the upcoming action.</p><p>Then it will move the current root down in order to build a new <code>MinHeap</code>.</p><p>After that, this function will call the <code>Pop</code> function we defined for the <code>MinHeap</code> struct before to return the last node which is the minimum data in the structure:</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// Pop removes and returns the minimum element (according to Less) from the heap.</span><span class="token comment">// The complexity is O(log n) where n = h.Len().</span><span class="token comment">// Pop is equivalent to Remove(h, 0).</span><span class="token keyword">func</span> <span class="token function">Pop</span><span class="token punctuation">(</span>h Interface<span class="token punctuation">)</span> any <span class="token punctuation">&#123;</span>n <span class="token operator">:=</span> h<span class="token punctuation">.</span><span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>h<span class="token punctuation">.</span><span class="token function">Swap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token function">down</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">return</span> h<span class="token punctuation">.</span><span class="token function">Pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Still, with the same <code>MinHeap</code> struct:</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] MinHeap:%v\n"</span><span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span>first <span class="token operator">:=</span> heap<span class="token punctuation">.</span><span class="token function">Pop</span><span class="token punctuation">(</span>mh<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] Pop:%d MinHeap:%v\n"</span><span class="token punctuation">,</span> first<span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>The <code>Pop</code> function will process the <code>Minheap</code> as:</p><p><img src="pop_heap.png" alt="pop_heap.png" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="pop_heap.png" class="lozad post-image"></p><p>The output of previous code will be:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">..</span>.<span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> MinHeap:<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">5</span> <span class="token number">8</span> <span class="token number">3</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> Pop:1 MinHeap:<span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">5</span> <span class="token number">8</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Push"><a href="#Push" class="headerlink" title="Push"></a>Push</h3><p><code>Push</code> function will first call the <code>Push</code> method of the given interface(<code>MinHeap</code>) in order to put the new node to the end of the array.</p><p>Then it will keep moving this new node up using <code>MinHeap</code>‘s <code>Less</code> and <code>Swap</code> methods to make sure that the new array still meets the requirement of <code>MinHeap</code>.</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// Push pushes the element x onto the heap.</span><span class="token comment">// The complexity is O(log n) where n = h.Len().</span><span class="token keyword">func</span> <span class="token function">Push</span><span class="token punctuation">(</span>h Interface<span class="token punctuation">,</span> x any<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>h<span class="token punctuation">.</span><span class="token function">Push</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token function">up</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> h<span class="token punctuation">.</span><span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">up</span><span class="token punctuation">(</span>h Interface<span class="token punctuation">,</span> j <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">for</span> <span class="token punctuation">&#123;</span>i <span class="token operator">:=</span> <span class="token punctuation">(</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token comment">// parent</span><span class="token keyword">if</span> i <span class="token operator">==</span> j <span class="token operator">||</span> <span class="token operator">!</span>h<span class="token punctuation">.</span><span class="token function">Less</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">break</span><span class="token punctuation">&#125;</span>h<span class="token punctuation">.</span><span class="token function">Swap</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span>j <span class="token operator">=</span> i<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>With the same <code>MinHeap</code> struct:</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] MinHeap:%v\n"</span><span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span>first <span class="token operator">:=</span> heap<span class="token punctuation">.</span><span class="token function">Pop</span><span class="token punctuation">(</span>mh<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] Pop:%d MinHeap:%v\n"</span><span class="token punctuation">,</span> first<span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span>heap<span class="token punctuation">.</span><span class="token function">Push</span><span class="token punctuation">(</span>mh<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] Push:%d MinHeap:%v\n"</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>The <code>Push</code> function will process like this:</p><p><img src="push_heap.png" alt="push_heap.png" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="push_heap.png" class="lozad post-image"></p><p>And the output of previous code will be:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">..</span>.<span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> MinHeap:<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">5</span> <span class="token number">8</span> <span class="token number">3</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> Pop:1 MinHeap:<span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">5</span> <span class="token number">8</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> Push:4 MinHeap:<span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">8</span> <span class="token number">7</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><p><code>Fix</code> function of package heap can be used when one of the node’s value is changed. In this situation, we don’t need to use Init to rebuild the whole tree, we only need to move this node down/up in order to make the array to meet the requirement again:</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// Fix re-establishes the heap ordering after the element at index i has changed its value.</span><span class="token comment">// Changing the value of the element at index i and then calling Fix is equivalent to,</span><span class="token comment">// but less expensive than, calling Remove(h, i) followed by a Push of the new value.</span><span class="token comment">// The complexity is O(log n) where n = h.Len().</span><span class="token keyword">func</span> <span class="token function">Fix</span><span class="token punctuation">(</span>h Interface<span class="token punctuation">,</span> i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token operator">!</span><span class="token function">down</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> i<span class="token punctuation">,</span> h<span class="token punctuation">.</span><span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">up</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>down</code> function will return a boolean value to indicate whether the position of target node has been changed in previous process. If not, it means that it might need to move up.</p><p>For example:</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] Changing one node of minHeap %v..\n"</span><span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">*</span>mh<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">6</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] MinHeap will be fixed:%v\n"</span><span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span>heap<span class="token punctuation">.</span><span class="token function">Fix</span><span class="token punctuation">(</span>mh<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] MinHeap after fix:%v\n"</span><span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] Changing one node of minHeap %v..\n"</span><span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">*</span>mh<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>heap<span class="token punctuation">.</span><span class="token function">Fix</span><span class="token punctuation">(</span>mh<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] MinHeap after fix:%v\n"</span><span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>The <code>Fix</code> function will process like this:</p><p><img src="Fix_heap.png" alt="Fix_heap.png" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="Fix_heap.png" class="lozad post-image"></p><p>And the output of previous code will be:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> Changing one node of minHeap <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">8</span> <span class="token number">7</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">..</span><span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> MinHeap will be fixed:<span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">6</span> <span class="token number">8</span> <span class="token number">7</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> MinHeap after fix:<span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">5</span> <span class="token number">8</span> <span class="token number">7</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> Changing one node of minHeap <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">5</span> <span class="token number">8</span> <span class="token number">7</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">..</span><span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> MinHeap after fix:<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">5</span> <span class="token number">8</span> <span class="token number">7</span> <span class="token number">6</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Remove"><a href="#Remove" class="headerlink" title="Remove"></a>Remove</h3><p><code>Remove</code> function is a bit like the combination of <code>Pop</code> and <code>Fix</code>.</p><ul><li>It will shorten the length of the array in order to exclude the last node in the tree (which will be change to the target node in next step)</li><li>Then it will swap the target node with the last node.</li><li>Coz the value the previous position of target node holds has been changed, this function will act like <code>Fix</code> function to make the array to meet the requirement again.</li><li>Finally it will pop out the current last node which is the target node as well.</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// Remove removes and returns the element at index i from the heap.</span><span class="token comment">// The complexity is O(log n) where n = h.Len().</span><span class="token keyword">func</span> <span class="token function">Remove</span><span class="token punctuation">(</span>h Interface<span class="token punctuation">,</span> i <span class="token builtin">int</span><span class="token punctuation">)</span> any <span class="token punctuation">&#123;</span>n <span class="token operator">:=</span> h<span class="token punctuation">.</span><span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token keyword">if</span> n <span class="token operator">!=</span> i <span class="token punctuation">&#123;</span>h<span class="token punctuation">.</span><span class="token function">Swap</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token operator">!</span><span class="token function">down</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> i<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">up</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> h<span class="token punctuation">.</span><span class="token function">Pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>For example: </p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token operator">...</span><span class="token comment">//Remove</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] Removing one node from minHeap %v..\n"</span><span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span>elem <span class="token operator">:=</span> heap<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>mh<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"[Heap] MinHeap after removing element %d :%v\n"</span><span class="token punctuation">,</span> elem<span class="token punctuation">,</span> <span class="token operator">*</span>mh<span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>The <code>Remove</code> function will process like this:</p><p><img src="Remove_heap.png" alt="Remove_heap.png" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="Remove_heap.png" class="lozad post-image"></p><p>And the output of previous code will be:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> Removing one node from minHeap <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">5</span> <span class="token number">8</span> <span class="token number">7</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">..</span><span class="token punctuation">[</span>Heap<span class="token punctuation">]</span> MinHeap after removing element <span class="token number">2</span> :<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">6</span> <span class="token number">5</span> <span class="token number">8</span> <span class="token number">7</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Here is mainly all the thing that I want to talk about package <code>Heap</code>. The complete example code can be found in my repo: <a href="https://github.com/lz-nsc/go-example/tree/main/heap">lz-nsz/go-example/heap</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Interfaces&quot;&gt;&lt;a href=&quot;#Interfaces&quot; class=&quot;headerlink&quot; title=&quot;Interfaces&quot;&gt;&lt;/a&gt;Interfaces&lt;/h2&gt;&lt;p&gt;Package &lt;code&gt;heap&lt;/code&gt; defines &lt;cod</summary>
      
    
    
    
    
    <category term="Golang" scheme="http://lzreload.com/en/tags/Golang/"/>
    
  </entry>
  
</feed>
